// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rke
{
    /// <summary>
    /// Provides RKE cluster resource. This can be used to create RKE clusters and retrieve their information.
    ///
    /// &gt; This content is derived from https://github.com/rancher/terraform-provider-rke/blob/master/website/docs/r/cluster.html.markdown.
    /// </summary>
    public partial class Cluster : Pulumi.CustomResource
    {
        /// <summary>
        /// RKE k8s cluster addon deployment timeout in seconds for status check (int)
        /// </summary>
        [Output("addonJobTimeout")]
        public Output<int> AddonJobTimeout { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster user addons YAML manifest to be deployed (string)
        /// </summary>
        [Output("addons")]
        public Output<string?> Addons { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster user addons YAML manifest urls or paths to be deployed (list)
        /// </summary>
        [Output("addonsIncludes")]
        public Output<ImmutableArray<string>> AddonsIncludes { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster api server url (string)
        /// </summary>
        [Output("apiServerUrl")]
        public Output<string> ApiServerUrl { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster authentication configuration (list maxitems:1)
        /// </summary>
        [Output("authentication")]
        public Output<Outputs.ClusterAuthentication> Authentication { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster authorization mode configuration (list maxitems:1)
        /// </summary>
        [Output("authorization")]
        public Output<Outputs.ClusterAuthorization> Authorization { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster bastion Host configuration (list maxitems:1)
        /// </summary>
        [Output("bastionHost")]
        public Output<Outputs.ClusterBastionHost?> BastionHost { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster CA certificate (string)
        /// </summary>
        [Output("caCrt")]
        public Output<string> CaCrt { get; private set; } = null!;

        /// <summary>
        /// Specify a certificate dir path (string)
        /// </summary>
        [Output("certDir")]
        public Output<string?> CertDir { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster certificates (string)
        /// </summary>
        [Output("certificates")]
        public Output<ImmutableArray<Outputs.ClusterCertificates>> Certificates { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster client certificate (string)
        /// </summary>
        [Output("clientCert")]
        public Output<string> ClientCert { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster client key (string)
        /// </summary>
        [Output("clientKey")]
        public Output<string> ClientKey { get; private set; } = null!;

        /// <summary>
        /// Calico cloud provider (string)
        /// </summary>
        [Output("cloudProvider")]
        public Output<Outputs.ClusterCloudProvider?> CloudProvider { get; private set; } = null!;

        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        [Output("clusterCidr")]
        public Output<string> ClusterCidr { get; private set; } = null!;

        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        [Output("clusterDnsServer")]
        public Output<string> ClusterDnsServer { get; private set; } = null!;

        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        [Output("clusterDomain")]
        public Output<string> ClusterDomain { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster name used in the kube config (string)
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster control plane nodes (list)
        /// </summary>
        [Output("controlPlaneHosts")]
        public Output<ImmutableArray<Outputs.ClusterControlPlaneHosts>> ControlPlaneHosts { get; private set; } = null!;

        /// <summary>
        /// Use custom certificates from a cert dir (string)
        /// </summary>
        [Output("customCerts")]
        public Output<bool?> CustomCerts { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster delay on creation (int)
        /// </summary>
        [Output("delayOnCreation")]
        public Output<int?> DelayOnCreation { get; private set; } = null!;

        /// <summary>
        /// Deploy RKE cluster on a dind environment. Default: `false` (bool)
        /// </summary>
        [Output("dind")]
        public Output<bool?> Dind { get; private set; } = null!;

        /// <summary>
        /// DinD RKE cluster dns (string)
        /// </summary>
        [Output("dindDnsServer")]
        public Output<string?> DindDnsServer { get; private set; } = null!;

        /// <summary>
        /// DinD RKE cluster storage driver (string)
        /// </summary>
        [Output("dindStorageDriver")]
        public Output<string?> DindStorageDriver { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable RKE k8s cluster port checking. Default `false` (bool)
        /// </summary>
        [Output("disablePortCheck")]
        public Output<bool?> DisablePortCheck { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster DNS Config (list maxitems:1)
        /// </summary>
        [Output("dns")]
        public Output<Outputs.ClusterDns> Dns { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster etcd nodes (list)
        /// </summary>
        [Output("etcdHosts")]
        public Output<ImmutableArray<Outputs.ClusterEtcdHosts>> EtcdHosts { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable RKE k8s cluster strict docker version checking. Default `false` (bool)
        /// </summary>
        [Output("ignoreDockerVersion")]
        public Output<bool?> IgnoreDockerVersion { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster inactive nodes (list)
        /// </summary>
        [Output("inactiveHosts")]
        public Output<ImmutableArray<Outputs.ClusterInactiveHosts>> InactiveHosts { get; private set; } = null!;

        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        [Output("ingress")]
        public Output<Outputs.ClusterIngress> Ingress { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster internal kube config yaml (string)
        /// </summary>
        [Output("internalKubeConfigYaml")]
        public Output<string> InternalKubeConfigYaml { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster admin user (string)
        /// </summary>
        [Output("kubeAdminUser")]
        public Output<string> KubeAdminUser { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster kube config yaml (string)
        /// </summary>
        [Output("kubeConfigYaml")]
        public Output<string> KubeConfigYaml { get; private set; } = null!;

        /// <summary>
        /// K8s version to deploy (if kubernetes image is specified, image version takes precedence) (string)
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster monitoring Config (list maxitems:1)
        /// </summary>
        [Output("monitoring")]
        public Output<Outputs.ClusterMonitoring> Monitoring { get; private set; } = null!;

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Output("network")]
        public Output<Outputs.ClusterNetwork> Network { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster nodes (list)
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<Outputs.ClusterNodes>> Nodes { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster nodes (YAML | JSON)
        /// </summary>
        [Output("nodesConfs")]
        public Output<ImmutableArray<string>> NodesConfs { get; private set; } = null!;

        /// <summary>
        /// RKE k8s directory path (string)
        /// </summary>
        [Output("prefixPath")]
        public Output<string> PrefixPath { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster private docker registries (list)
        /// </summary>
        [Output("privateRegistries")]
        public Output<ImmutableArray<Outputs.ClusterPrivateRegistries>> PrivateRegistries { get; private set; } = null!;

        /// <summary>
        /// Restore cluster. Default `false` (bool)
        /// </summary>
        [Output("restore")]
        public Output<Outputs.ClusterRestore> Restore { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster config yaml (string)
        /// </summary>
        [Output("rkeClusterYaml")]
        public Output<string> RkeClusterYaml { get; private set; } = null!;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster state (string)
        /// </summary>
        [Output("rkeState")]
        public Output<string> RkeState { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster rotate certificates configuration (list maxitems:1)
        /// </summary>
        [Output("rotateCertificates")]
        public Output<Outputs.ClusterRotateCertificates?> RotateCertificates { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster running system images list (list)
        /// </summary>
        [Output("runningSystemImages")]
        public Output<Outputs.ClusterRunningSystemImages> RunningSystemImages { get; private set; } = null!;

        /// <summary>
        /// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
        /// </summary>
        [Output("services")]
        public Output<Outputs.ClusterServices> Services { get; private set; } = null!;

        /// <summary>
        /// Use services.etcd instead (list maxitems:1)
        /// </summary>
        [Output("servicesEtcdDeprecated")]
        public Output<Outputs.ClusterServicesEtcdDeprecated?> ServicesEtcdDeprecated { get; private set; } = null!;

        /// <summary>
        /// Use services.kube_api instead (list maxitems:1)
        /// </summary>
        [Output("servicesKubeApiDeprecated")]
        public Output<Outputs.ClusterServicesKubeApiDeprecated?> ServicesKubeApiDeprecated { get; private set; } = null!;

        /// <summary>
        /// Use services.kube_controller instead (list maxitems:1)
        /// </summary>
        [Output("servicesKubeControllerDeprecated")]
        public Output<Outputs.ClusterServicesKubeControllerDeprecated?> ServicesKubeControllerDeprecated { get; private set; } = null!;

        /// <summary>
        /// Use services.kubelet instead (list maxitems:1)
        /// </summary>
        [Output("servicesKubeletDeprecated")]
        public Output<Outputs.ClusterServicesKubeletDeprecated?> ServicesKubeletDeprecated { get; private set; } = null!;

        /// <summary>
        /// Use services.kubeproxy instead (list maxitems:1)
        /// </summary>
        [Output("servicesKubeProxyDeprecated")]
        public Output<Outputs.ClusterServicesKubeProxyDeprecated?> ServicesKubeProxyDeprecated { get; private set; } = null!;

        /// <summary>
        /// Use services.scheduler instead (list maxitems:1)
        /// </summary>
        [Output("servicesKubeSchedulerDeprecated")]
        public Output<Outputs.ClusterServicesKubeSchedulerDeprecated?> ServicesKubeSchedulerDeprecated { get; private set; } = null!;

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Output("sshAgentAuth")]
        public Output<bool?> SshAgentAuth { get; private set; } = null!;

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Output("sshCertPath")]
        public Output<string> SshCertPath { get; private set; } = null!;

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Output("sshKeyPath")]
        public Output<string> SshKeyPath { get; private set; } = null!;

        /// <summary>
        /// RKE k8s cluster system images list (list maxitems:1)
        /// </summary>
        [Output("systemImages")]
        public Output<Outputs.ClusterSystemImages?> SystemImages { get; private set; } = null!;

        /// <summary>
        /// Skip idempotent deployment of control and etcd plane. Default `false` (bool)
        /// </summary>
        [Output("updateOnly")]
        public Output<bool?> UpdateOnly { get; private set; } = null!;

        /// <summary>
        /// (Computed) RKE k8s cluster worker nodes (list)
        /// </summary>
        [Output("workerHosts")]
        public Output<ImmutableArray<Outputs.ClusterWorkerHosts>> WorkerHosts { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("rke:index/cluster:Cluster", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("rke:index/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// RKE k8s cluster addon deployment timeout in seconds for status check (int)
        /// </summary>
        [Input("addonJobTimeout")]
        public Input<int>? AddonJobTimeout { get; set; }

        /// <summary>
        /// RKE k8s cluster user addons YAML manifest to be deployed (string)
        /// </summary>
        [Input("addons")]
        public Input<string>? Addons { get; set; }

        [Input("addonsIncludes")]
        private InputList<string>? _addonsIncludes;

        /// <summary>
        /// RKE k8s cluster user addons YAML manifest urls or paths to be deployed (list)
        /// </summary>
        public InputList<string> AddonsIncludes
        {
            get => _addonsIncludes ?? (_addonsIncludes = new InputList<string>());
            set => _addonsIncludes = value;
        }

        /// <summary>
        /// RKE k8s cluster authentication configuration (list maxitems:1)
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.ClusterAuthenticationArgs>? Authentication { get; set; }

        /// <summary>
        /// RKE k8s cluster authorization mode configuration (list maxitems:1)
        /// </summary>
        [Input("authorization")]
        public Input<Inputs.ClusterAuthorizationArgs>? Authorization { get; set; }

        /// <summary>
        /// RKE k8s cluster bastion Host configuration (list maxitems:1)
        /// </summary>
        [Input("bastionHost")]
        public Input<Inputs.ClusterBastionHostArgs>? BastionHost { get; set; }

        /// <summary>
        /// Specify a certificate dir path (string)
        /// </summary>
        [Input("certDir")]
        public Input<string>? CertDir { get; set; }

        /// <summary>
        /// Calico cloud provider (string)
        /// </summary>
        [Input("cloudProvider")]
        public Input<Inputs.ClusterCloudProviderArgs>? CloudProvider { get; set; }

        /// <summary>
        /// RKE k8s cluster name used in the kube config (string)
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Use custom certificates from a cert dir (string)
        /// </summary>
        [Input("customCerts")]
        public Input<bool>? CustomCerts { get; set; }

        /// <summary>
        /// RKE k8s cluster delay on creation (int)
        /// </summary>
        [Input("delayOnCreation")]
        public Input<int>? DelayOnCreation { get; set; }

        /// <summary>
        /// Deploy RKE cluster on a dind environment. Default: `false` (bool)
        /// </summary>
        [Input("dind")]
        public Input<bool>? Dind { get; set; }

        /// <summary>
        /// DinD RKE cluster dns (string)
        /// </summary>
        [Input("dindDnsServer")]
        public Input<string>? DindDnsServer { get; set; }

        /// <summary>
        /// DinD RKE cluster storage driver (string)
        /// </summary>
        [Input("dindStorageDriver")]
        public Input<string>? DindStorageDriver { get; set; }

        /// <summary>
        /// Enable/Disable RKE k8s cluster port checking. Default `false` (bool)
        /// </summary>
        [Input("disablePortCheck")]
        public Input<bool>? DisablePortCheck { get; set; }

        /// <summary>
        /// RKE k8s cluster DNS Config (list maxitems:1)
        /// </summary>
        [Input("dns")]
        public Input<Inputs.ClusterDnsArgs>? Dns { get; set; }

        /// <summary>
        /// Enable/Disable RKE k8s cluster strict docker version checking. Default `false` (bool)
        /// </summary>
        [Input("ignoreDockerVersion")]
        public Input<bool>? IgnoreDockerVersion { get; set; }

        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        [Input("ingress")]
        public Input<Inputs.ClusterIngressArgs>? Ingress { get; set; }

        /// <summary>
        /// K8s version to deploy (if kubernetes image is specified, image version takes precedence) (string)
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// RKE k8s cluster monitoring Config (list maxitems:1)
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.ClusterMonitoringArgs>? Monitoring { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("network")]
        public Input<Inputs.ClusterNetworkArgs>? Network { get; set; }

        [Input("nodes")]
        private InputList<Inputs.ClusterNodesArgs>? _nodes;

        /// <summary>
        /// RKE k8s cluster nodes (list)
        /// </summary>
        public InputList<Inputs.ClusterNodesArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.ClusterNodesArgs>());
            set => _nodes = value;
        }

        [Input("nodesConfs")]
        private InputList<string>? _nodesConfs;

        /// <summary>
        /// RKE k8s cluster nodes (YAML | JSON)
        /// </summary>
        public InputList<string> NodesConfs
        {
            get => _nodesConfs ?? (_nodesConfs = new InputList<string>());
            set => _nodesConfs = value;
        }

        /// <summary>
        /// RKE k8s directory path (string)
        /// </summary>
        [Input("prefixPath")]
        public Input<string>? PrefixPath { get; set; }

        [Input("privateRegistries")]
        private InputList<Inputs.ClusterPrivateRegistriesArgs>? _privateRegistries;

        /// <summary>
        /// RKE k8s cluster private docker registries (list)
        /// </summary>
        public InputList<Inputs.ClusterPrivateRegistriesArgs> PrivateRegistries
        {
            get => _privateRegistries ?? (_privateRegistries = new InputList<Inputs.ClusterPrivateRegistriesArgs>());
            set => _privateRegistries = value;
        }

        /// <summary>
        /// Restore cluster. Default `false` (bool)
        /// </summary>
        [Input("restore")]
        public Input<Inputs.ClusterRestoreArgs>? Restore { get; set; }

        /// <summary>
        /// RKE k8s cluster rotate certificates configuration (list maxitems:1)
        /// </summary>
        [Input("rotateCertificates")]
        public Input<Inputs.ClusterRotateCertificatesArgs>? RotateCertificates { get; set; }

        /// <summary>
        /// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
        /// </summary>
        [Input("services")]
        public Input<Inputs.ClusterServicesArgs>? Services { get; set; }

        /// <summary>
        /// Use services.etcd instead (list maxitems:1)
        /// </summary>
        [Input("servicesEtcdDeprecated")]
        public Input<Inputs.ClusterServicesEtcdDeprecatedArgs>? ServicesEtcdDeprecated { get; set; }

        /// <summary>
        /// Use services.kube_api instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeApiDeprecated")]
        public Input<Inputs.ClusterServicesKubeApiDeprecatedArgs>? ServicesKubeApiDeprecated { get; set; }

        /// <summary>
        /// Use services.kube_controller instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeControllerDeprecated")]
        public Input<Inputs.ClusterServicesKubeControllerDeprecatedArgs>? ServicesKubeControllerDeprecated { get; set; }

        /// <summary>
        /// Use services.kubelet instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeletDeprecated")]
        public Input<Inputs.ClusterServicesKubeletDeprecatedArgs>? ServicesKubeletDeprecated { get; set; }

        /// <summary>
        /// Use services.kubeproxy instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeProxyDeprecated")]
        public Input<Inputs.ClusterServicesKubeProxyDeprecatedArgs>? ServicesKubeProxyDeprecated { get; set; }

        /// <summary>
        /// Use services.scheduler instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeSchedulerDeprecated")]
        public Input<Inputs.ClusterServicesKubeSchedulerDeprecatedArgs>? ServicesKubeSchedulerDeprecated { get; set; }

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Input("sshAgentAuth")]
        public Input<bool>? SshAgentAuth { get; set; }

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Input("sshCertPath")]
        public Input<string>? SshCertPath { get; set; }

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Input("sshKeyPath")]
        public Input<string>? SshKeyPath { get; set; }

        /// <summary>
        /// RKE k8s cluster system images list (list maxitems:1)
        /// </summary>
        [Input("systemImages")]
        public Input<Inputs.ClusterSystemImagesArgs>? SystemImages { get; set; }

        /// <summary>
        /// Skip idempotent deployment of control and etcd plane. Default `false` (bool)
        /// </summary>
        [Input("updateOnly")]
        public Input<bool>? UpdateOnly { get; set; }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// RKE k8s cluster addon deployment timeout in seconds for status check (int)
        /// </summary>
        [Input("addonJobTimeout")]
        public Input<int>? AddonJobTimeout { get; set; }

        /// <summary>
        /// RKE k8s cluster user addons YAML manifest to be deployed (string)
        /// </summary>
        [Input("addons")]
        public Input<string>? Addons { get; set; }

        [Input("addonsIncludes")]
        private InputList<string>? _addonsIncludes;

        /// <summary>
        /// RKE k8s cluster user addons YAML manifest urls or paths to be deployed (list)
        /// </summary>
        public InputList<string> AddonsIncludes
        {
            get => _addonsIncludes ?? (_addonsIncludes = new InputList<string>());
            set => _addonsIncludes = value;
        }

        /// <summary>
        /// (Computed) RKE k8s cluster api server url (string)
        /// </summary>
        [Input("apiServerUrl")]
        public Input<string>? ApiServerUrl { get; set; }

        /// <summary>
        /// RKE k8s cluster authentication configuration (list maxitems:1)
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.ClusterAuthenticationGetArgs>? Authentication { get; set; }

        /// <summary>
        /// RKE k8s cluster authorization mode configuration (list maxitems:1)
        /// </summary>
        [Input("authorization")]
        public Input<Inputs.ClusterAuthorizationGetArgs>? Authorization { get; set; }

        /// <summary>
        /// RKE k8s cluster bastion Host configuration (list maxitems:1)
        /// </summary>
        [Input("bastionHost")]
        public Input<Inputs.ClusterBastionHostGetArgs>? BastionHost { get; set; }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster CA certificate (string)
        /// </summary>
        [Input("caCrt")]
        public Input<string>? CaCrt { get; set; }

        /// <summary>
        /// Specify a certificate dir path (string)
        /// </summary>
        [Input("certDir")]
        public Input<string>? CertDir { get; set; }

        [Input("certificates")]
        private InputList<Inputs.ClusterCertificatesGetArgs>? _certificates;

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster certificates (string)
        /// </summary>
        public InputList<Inputs.ClusterCertificatesGetArgs> Certificates
        {
            get => _certificates ?? (_certificates = new InputList<Inputs.ClusterCertificatesGetArgs>());
            set => _certificates = value;
        }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster client certificate (string)
        /// </summary>
        [Input("clientCert")]
        public Input<string>? ClientCert { get; set; }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster client key (string)
        /// </summary>
        [Input("clientKey")]
        public Input<string>? ClientKey { get; set; }

        /// <summary>
        /// Calico cloud provider (string)
        /// </summary>
        [Input("cloudProvider")]
        public Input<Inputs.ClusterCloudProviderGetArgs>? CloudProvider { get; set; }

        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        [Input("clusterCidr")]
        public Input<string>? ClusterCidr { get; set; }

        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        [Input("clusterDnsServer")]
        public Input<string>? ClusterDnsServer { get; set; }

        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        [Input("clusterDomain")]
        public Input<string>? ClusterDomain { get; set; }

        /// <summary>
        /// RKE k8s cluster name used in the kube config (string)
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("controlPlaneHosts")]
        private InputList<Inputs.ClusterControlPlaneHostsGetArgs>? _controlPlaneHosts;

        /// <summary>
        /// (Computed) RKE k8s cluster control plane nodes (list)
        /// </summary>
        public InputList<Inputs.ClusterControlPlaneHostsGetArgs> ControlPlaneHosts
        {
            get => _controlPlaneHosts ?? (_controlPlaneHosts = new InputList<Inputs.ClusterControlPlaneHostsGetArgs>());
            set => _controlPlaneHosts = value;
        }

        /// <summary>
        /// Use custom certificates from a cert dir (string)
        /// </summary>
        [Input("customCerts")]
        public Input<bool>? CustomCerts { get; set; }

        /// <summary>
        /// RKE k8s cluster delay on creation (int)
        /// </summary>
        [Input("delayOnCreation")]
        public Input<int>? DelayOnCreation { get; set; }

        /// <summary>
        /// Deploy RKE cluster on a dind environment. Default: `false` (bool)
        /// </summary>
        [Input("dind")]
        public Input<bool>? Dind { get; set; }

        /// <summary>
        /// DinD RKE cluster dns (string)
        /// </summary>
        [Input("dindDnsServer")]
        public Input<string>? DindDnsServer { get; set; }

        /// <summary>
        /// DinD RKE cluster storage driver (string)
        /// </summary>
        [Input("dindStorageDriver")]
        public Input<string>? DindStorageDriver { get; set; }

        /// <summary>
        /// Enable/Disable RKE k8s cluster port checking. Default `false` (bool)
        /// </summary>
        [Input("disablePortCheck")]
        public Input<bool>? DisablePortCheck { get; set; }

        /// <summary>
        /// RKE k8s cluster DNS Config (list maxitems:1)
        /// </summary>
        [Input("dns")]
        public Input<Inputs.ClusterDnsGetArgs>? Dns { get; set; }

        [Input("etcdHosts")]
        private InputList<Inputs.ClusterEtcdHostsGetArgs>? _etcdHosts;

        /// <summary>
        /// (Computed) RKE k8s cluster etcd nodes (list)
        /// </summary>
        public InputList<Inputs.ClusterEtcdHostsGetArgs> EtcdHosts
        {
            get => _etcdHosts ?? (_etcdHosts = new InputList<Inputs.ClusterEtcdHostsGetArgs>());
            set => _etcdHosts = value;
        }

        /// <summary>
        /// Enable/Disable RKE k8s cluster strict docker version checking. Default `false` (bool)
        /// </summary>
        [Input("ignoreDockerVersion")]
        public Input<bool>? IgnoreDockerVersion { get; set; }

        [Input("inactiveHosts")]
        private InputList<Inputs.ClusterInactiveHostsGetArgs>? _inactiveHosts;

        /// <summary>
        /// (Computed) RKE k8s cluster inactive nodes (list)
        /// </summary>
        public InputList<Inputs.ClusterInactiveHostsGetArgs> InactiveHosts
        {
            get => _inactiveHosts ?? (_inactiveHosts = new InputList<Inputs.ClusterInactiveHostsGetArgs>());
            set => _inactiveHosts = value;
        }

        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        [Input("ingress")]
        public Input<Inputs.ClusterIngressGetArgs>? Ingress { get; set; }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster internal kube config yaml (string)
        /// </summary>
        [Input("internalKubeConfigYaml")]
        public Input<string>? InternalKubeConfigYaml { get; set; }

        /// <summary>
        /// (Computed) RKE k8s cluster admin user (string)
        /// </summary>
        [Input("kubeAdminUser")]
        public Input<string>? KubeAdminUser { get; set; }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster kube config yaml (string)
        /// </summary>
        [Input("kubeConfigYaml")]
        public Input<string>? KubeConfigYaml { get; set; }

        /// <summary>
        /// K8s version to deploy (if kubernetes image is specified, image version takes precedence) (string)
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// RKE k8s cluster monitoring Config (list maxitems:1)
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.ClusterMonitoringGetArgs>? Monitoring { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("network")]
        public Input<Inputs.ClusterNetworkGetArgs>? Network { get; set; }

        [Input("nodes")]
        private InputList<Inputs.ClusterNodesGetArgs>? _nodes;

        /// <summary>
        /// RKE k8s cluster nodes (list)
        /// </summary>
        public InputList<Inputs.ClusterNodesGetArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.ClusterNodesGetArgs>());
            set => _nodes = value;
        }

        [Input("nodesConfs")]
        private InputList<string>? _nodesConfs;

        /// <summary>
        /// RKE k8s cluster nodes (YAML | JSON)
        /// </summary>
        public InputList<string> NodesConfs
        {
            get => _nodesConfs ?? (_nodesConfs = new InputList<string>());
            set => _nodesConfs = value;
        }

        /// <summary>
        /// RKE k8s directory path (string)
        /// </summary>
        [Input("prefixPath")]
        public Input<string>? PrefixPath { get; set; }

        [Input("privateRegistries")]
        private InputList<Inputs.ClusterPrivateRegistriesGetArgs>? _privateRegistries;

        /// <summary>
        /// RKE k8s cluster private docker registries (list)
        /// </summary>
        public InputList<Inputs.ClusterPrivateRegistriesGetArgs> PrivateRegistries
        {
            get => _privateRegistries ?? (_privateRegistries = new InputList<Inputs.ClusterPrivateRegistriesGetArgs>());
            set => _privateRegistries = value;
        }

        /// <summary>
        /// Restore cluster. Default `false` (bool)
        /// </summary>
        [Input("restore")]
        public Input<Inputs.ClusterRestoreGetArgs>? Restore { get; set; }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster config yaml (string)
        /// </summary>
        [Input("rkeClusterYaml")]
        public Input<string>? RkeClusterYaml { get; set; }

        /// <summary>
        /// (Computed/Sensitive) RKE k8s cluster state (string)
        /// </summary>
        [Input("rkeState")]
        public Input<string>? RkeState { get; set; }

        /// <summary>
        /// RKE k8s cluster rotate certificates configuration (list maxitems:1)
        /// </summary>
        [Input("rotateCertificates")]
        public Input<Inputs.ClusterRotateCertificatesGetArgs>? RotateCertificates { get; set; }

        /// <summary>
        /// (Computed) RKE k8s cluster running system images list (list)
        /// </summary>
        [Input("runningSystemImages")]
        public Input<Inputs.ClusterRunningSystemImagesGetArgs>? RunningSystemImages { get; set; }

        /// <summary>
        /// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
        /// </summary>
        [Input("services")]
        public Input<Inputs.ClusterServicesGetArgs>? Services { get; set; }

        /// <summary>
        /// Use services.etcd instead (list maxitems:1)
        /// </summary>
        [Input("servicesEtcdDeprecated")]
        public Input<Inputs.ClusterServicesEtcdDeprecatedGetArgs>? ServicesEtcdDeprecated { get; set; }

        /// <summary>
        /// Use services.kube_api instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeApiDeprecated")]
        public Input<Inputs.ClusterServicesKubeApiDeprecatedGetArgs>? ServicesKubeApiDeprecated { get; set; }

        /// <summary>
        /// Use services.kube_controller instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeControllerDeprecated")]
        public Input<Inputs.ClusterServicesKubeControllerDeprecatedGetArgs>? ServicesKubeControllerDeprecated { get; set; }

        /// <summary>
        /// Use services.kubelet instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeletDeprecated")]
        public Input<Inputs.ClusterServicesKubeletDeprecatedGetArgs>? ServicesKubeletDeprecated { get; set; }

        /// <summary>
        /// Use services.kubeproxy instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeProxyDeprecated")]
        public Input<Inputs.ClusterServicesKubeProxyDeprecatedGetArgs>? ServicesKubeProxyDeprecated { get; set; }

        /// <summary>
        /// Use services.scheduler instead (list maxitems:1)
        /// </summary>
        [Input("servicesKubeSchedulerDeprecated")]
        public Input<Inputs.ClusterServicesKubeSchedulerDeprecatedGetArgs>? ServicesKubeSchedulerDeprecated { get; set; }

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Input("sshAgentAuth")]
        public Input<bool>? SshAgentAuth { get; set; }

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Input("sshCertPath")]
        public Input<string>? SshCertPath { get; set; }

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Input("sshKeyPath")]
        public Input<string>? SshKeyPath { get; set; }

        /// <summary>
        /// RKE k8s cluster system images list (list maxitems:1)
        /// </summary>
        [Input("systemImages")]
        public Input<Inputs.ClusterSystemImagesGetArgs>? SystemImages { get; set; }

        /// <summary>
        /// Skip idempotent deployment of control and etcd plane. Default `false` (bool)
        /// </summary>
        [Input("updateOnly")]
        public Input<bool>? UpdateOnly { get; set; }

        [Input("workerHosts")]
        private InputList<Inputs.ClusterWorkerHostsGetArgs>? _workerHosts;

        /// <summary>
        /// (Computed) RKE k8s cluster worker nodes (list)
        /// </summary>
        public InputList<Inputs.ClusterWorkerHostsGetArgs> WorkerHosts
        {
            get => _workerHosts ?? (_workerHosts = new InputList<Inputs.ClusterWorkerHostsGetArgs>());
            set => _workerHosts = value;
        }

        public ClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ClusterAuthenticationArgs : Pulumi.ResourceArgs
    {
        [Input("sans")]
        private InputList<string>? _sans;

        /// <summary>
        /// List of additional hostnames and IPs to include in the api server PKI cert (list)
        /// </summary>
        public InputList<string> Sans
        {
            get => _sans ?? (_sans = new InputList<string>());
            set => _sans = value;
        }

        /// <summary>
        /// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        /// <summary>
        /// Webhook configuration options (list maxitem: 1)
        /// </summary>
        [Input("webhook")]
        public Input<ClusterAuthenticationWebhookArgs>? Webhook { get; set; }

        public ClusterAuthenticationArgs()
        {
        }
    }

    public sealed class ClusterAuthenticationGetArgs : Pulumi.ResourceArgs
    {
        [Input("sans")]
        private InputList<string>? _sans;

        /// <summary>
        /// List of additional hostnames and IPs to include in the api server PKI cert (list)
        /// </summary>
        public InputList<string> Sans
        {
            get => _sans ?? (_sans = new InputList<string>());
            set => _sans = value;
        }

        /// <summary>
        /// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        /// <summary>
        /// Webhook configuration options (list maxitem: 1)
        /// </summary>
        [Input("webhook")]
        public Input<ClusterAuthenticationWebhookGetArgs>? Webhook { get; set; }

        public ClusterAuthenticationGetArgs()
        {
        }
    }

    public sealed class ClusterAuthenticationWebhookArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Controls how long to cache authentication decisions (string)
        /// </summary>
        [Input("cacheTimeout")]
        public Input<string>? CacheTimeout { get; set; }

        /// <summary>
        /// Multiline string that represent a custom webhook config file (string)
        /// </summary>
        [Input("configFile")]
        public Input<string>? ConfigFile { get; set; }

        public ClusterAuthenticationWebhookArgs()
        {
        }
    }

    public sealed class ClusterAuthenticationWebhookGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Controls how long to cache authentication decisions (string)
        /// </summary>
        [Input("cacheTimeout")]
        public Input<string>? CacheTimeout { get; set; }

        /// <summary>
        /// Multiline string that represent a custom webhook config file (string)
        /// </summary>
        [Input("configFile")]
        public Input<string>? ConfigFile { get; set; }

        public ClusterAuthenticationWebhookGetArgs()
        {
        }
    }

    public sealed class ClusterAuthorizationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        public ClusterAuthorizationArgs()
        {
        }
    }

    public sealed class ClusterAuthorizationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        public ClusterAuthorizationGetArgs()
        {
        }
    }

    public sealed class ClusterBastionHostArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Input("sshAgentAuth")]
        public Input<bool>? SshAgentAuth { get; set; }

        /// <summary>
        /// SSH Certificate (string)
        /// </summary>
        [Input("sshCert")]
        public Input<string>? SshCert { get; set; }

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Input("sshCertPath")]
        public Input<string>? SshCertPath { get; set; }

        /// <summary>
        /// SSH Private Key (string)
        /// </summary>
        [Input("sshKey")]
        public Input<string>? SshKey { get; set; }

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Input("sshKeyPath")]
        public Input<string>? SshKeyPath { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterBastionHostArgs()
        {
        }
    }

    public sealed class ClusterBastionHostGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Input("sshAgentAuth")]
        public Input<bool>? SshAgentAuth { get; set; }

        /// <summary>
        /// SSH Certificate (string)
        /// </summary>
        [Input("sshCert")]
        public Input<string>? SshCert { get; set; }

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Input("sshCertPath")]
        public Input<string>? SshCertPath { get; set; }

        /// <summary>
        /// SSH Private Key (string)
        /// </summary>
        [Input("sshKey")]
        public Input<string>? SshKey { get; set; }

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Input("sshKeyPath")]
        public Input<string>? SshKeyPath { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterBastionHostGetArgs()
        {
        }
    }

    public sealed class ClusterCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        [Input("config")]
        public Input<string>? Config { get; set; }

        [Input("configEnvName")]
        public Input<string>? ConfigEnvName { get; set; }

        [Input("configPath")]
        public Input<string>? ConfigPath { get; set; }

        [Input("envName")]
        public Input<string>? EnvName { get; set; }

        /// <summary>
        /// (Computed) The ID of the resource (string)
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("keyEnvName")]
        public Input<string>? KeyEnvName { get; set; }

        [Input("keyPath")]
        public Input<string>? KeyPath { get; set; }

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ouName")]
        public Input<string>? OuName { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        public ClusterCertificatesGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use aws_cloud_provider instead
        /// </summary>
        [Input("awsCloudConfig")]
        public Input<ClusterCloudProviderAwsCloudConfigArgs>? AwsCloudConfig { get; set; }

        /// <summary>
        /// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
        /// </summary>
        [Input("awsCloudProvider")]
        public Input<ClusterCloudProviderAwsCloudProviderArgs>? AwsCloudProvider { get; set; }

        /// <summary>
        /// Use azure_cloud_provider instead
        /// </summary>
        [Input("azureCloudConfig")]
        public Input<ClusterCloudProviderAzureCloudConfigArgs>? AzureCloudConfig { get; set; }

        /// <summary>
        /// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
        /// </summary>
        [Input("azureCloudProvider")]
        public Input<ClusterCloudProviderAzureCloudProviderArgs>? AzureCloudProvider { get; set; }

        /// <summary>
        /// Use custom_cloud_provider instead
        /// </summary>
        [Input("customCloudConfig")]
        public Input<string>? CustomCloudConfig { get; set; }

        /// <summary>
        /// Custom Cloud Provider config (string)
        /// </summary>
        [Input("customCloudProvider")]
        public Input<string>? CustomCloudProvider { get; set; }

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Use openstack_cloud_provider instead
        /// </summary>
        [Input("openstackCloudConfig")]
        public Input<ClusterCloudProviderOpenstackCloudConfigArgs>? OpenstackCloudConfig { get; set; }

        /// <summary>
        /// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
        /// </summary>
        [Input("openstackCloudProvider")]
        public Input<ClusterCloudProviderOpenstackCloudProviderArgs>? OpenstackCloudProvider { get; set; }

        /// <summary>
        /// Use vsphere_cloud_provider instead
        /// </summary>
        [Input("vsphereCloudConfig")]
        public Input<ClusterCloudProviderVsphereCloudConfigArgs>? VsphereCloudConfig { get; set; }

        /// <summary>
        /// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtual_center` configuration. (list maxitems:1)
        /// </summary>
        [Input("vsphereCloudProvider")]
        public Input<ClusterCloudProviderVsphereCloudProviderArgs>? VsphereCloudProvider { get; set; }

        public ClusterCloudProviderArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderAwsCloudConfigGlobalArgs>? Global { get; set; }

        [Input("serviceOverrides")]
        private InputList<ClusterCloudProviderAwsCloudConfigServiceOverridesArgs>? _serviceOverrides;

        /// <summary>
        /// (list)
        /// </summary>
        public InputList<ClusterCloudProviderAwsCloudConfigServiceOverridesArgs> ServiceOverrides
        {
            get => _serviceOverrides ?? (_serviceOverrides = new InputList<ClusterCloudProviderAwsCloudConfigServiceOverridesArgs>());
            set => _serviceOverrides = value;
        }

        public ClusterCloudProviderAwsCloudConfigArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderAwsCloudConfigGlobalGetArgs>? Global { get; set; }

        [Input("serviceOverrides")]
        private InputList<ClusterCloudProviderAwsCloudConfigServiceOverridesGetArgs>? _serviceOverrides;

        /// <summary>
        /// (list)
        /// </summary>
        public InputList<ClusterCloudProviderAwsCloudConfigServiceOverridesGetArgs> ServiceOverrides
        {
            get => _serviceOverrides ?? (_serviceOverrides = new InputList<ClusterCloudProviderAwsCloudConfigServiceOverridesGetArgs>());
            set => _serviceOverrides = value;
        }

        public ClusterCloudProviderAwsCloudConfigGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudConfigGlobalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disables the automatic ingress creation. Default `false` (bool)
        /// </summary>
        [Input("disableSecurityGroupIngress")]
        public Input<bool>? DisableSecurityGroupIngress { get; set; }

        /// <summary>
        /// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
        /// </summary>
        [Input("disableStrictZoneCheck")]
        public Input<bool>? DisableStrictZoneCheck { get; set; }

        /// <summary>
        /// Use these ELB security groups instead create new (string)
        /// </summary>
        [Input("elbSecurityGroup")]
        public Input<string>? ElbSecurityGroup { get; set; }

        /// <summary>
        /// The cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterId")]
        public Input<string>? KubernetesClusterId { get; set; }

        /// <summary>
        /// Legacy cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterTag")]
        public Input<string>? KubernetesClusterTag { get; set; }

        /// <summary>
        /// IAM role to assume when interaction with AWS APIs (string)
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// Enables using a specific RouteTable (string)
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
        /// </summary>
        [Input("vpc")]
        public Input<string>? Vpc { get; set; }

        /// <summary>
        /// The AWS zone (string)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterCloudProviderAwsCloudConfigGlobalArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudConfigGlobalGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disables the automatic ingress creation. Default `false` (bool)
        /// </summary>
        [Input("disableSecurityGroupIngress")]
        public Input<bool>? DisableSecurityGroupIngress { get; set; }

        /// <summary>
        /// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
        /// </summary>
        [Input("disableStrictZoneCheck")]
        public Input<bool>? DisableStrictZoneCheck { get; set; }

        /// <summary>
        /// Use these ELB security groups instead create new (string)
        /// </summary>
        [Input("elbSecurityGroup")]
        public Input<string>? ElbSecurityGroup { get; set; }

        /// <summary>
        /// The cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterId")]
        public Input<string>? KubernetesClusterId { get; set; }

        /// <summary>
        /// Legacy cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterTag")]
        public Input<string>? KubernetesClusterTag { get; set; }

        /// <summary>
        /// IAM role to assume when interaction with AWS APIs (string)
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// Enables using a specific RouteTable (string)
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
        /// </summary>
        [Input("vpc")]
        public Input<string>? Vpc { get; set; }

        /// <summary>
        /// The AWS zone (string)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterCloudProviderAwsCloudConfigGlobalGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudConfigServiceOverridesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingMethod")]
        public Input<string>? SigningMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingName")]
        public Input<string>? SigningName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingRegion")]
        public Input<string>? SigningRegion { get; set; }

        /// <summary>
        /// Registry URL (string)
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ClusterCloudProviderAwsCloudConfigServiceOverridesArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudConfigServiceOverridesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingMethod")]
        public Input<string>? SigningMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingName")]
        public Input<string>? SigningName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingRegion")]
        public Input<string>? SigningRegion { get; set; }

        /// <summary>
        /// Registry URL (string)
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ClusterCloudProviderAwsCloudConfigServiceOverridesGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderAwsCloudProviderGlobalArgs>? Global { get; set; }

        [Input("serviceOverrides")]
        private InputList<ClusterCloudProviderAwsCloudProviderServiceOverridesArgs>? _serviceOverrides;

        /// <summary>
        /// (list)
        /// </summary>
        public InputList<ClusterCloudProviderAwsCloudProviderServiceOverridesArgs> ServiceOverrides
        {
            get => _serviceOverrides ?? (_serviceOverrides = new InputList<ClusterCloudProviderAwsCloudProviderServiceOverridesArgs>());
            set => _serviceOverrides = value;
        }

        public ClusterCloudProviderAwsCloudProviderArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderAwsCloudProviderGlobalGetArgs>? Global { get; set; }

        [Input("serviceOverrides")]
        private InputList<ClusterCloudProviderAwsCloudProviderServiceOverridesGetArgs>? _serviceOverrides;

        /// <summary>
        /// (list)
        /// </summary>
        public InputList<ClusterCloudProviderAwsCloudProviderServiceOverridesGetArgs> ServiceOverrides
        {
            get => _serviceOverrides ?? (_serviceOverrides = new InputList<ClusterCloudProviderAwsCloudProviderServiceOverridesGetArgs>());
            set => _serviceOverrides = value;
        }

        public ClusterCloudProviderAwsCloudProviderGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudProviderGlobalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disables the automatic ingress creation. Default `false` (bool)
        /// </summary>
        [Input("disableSecurityGroupIngress")]
        public Input<bool>? DisableSecurityGroupIngress { get; set; }

        /// <summary>
        /// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
        /// </summary>
        [Input("disableStrictZoneCheck")]
        public Input<bool>? DisableStrictZoneCheck { get; set; }

        /// <summary>
        /// Use these ELB security groups instead create new (string)
        /// </summary>
        [Input("elbSecurityGroup")]
        public Input<string>? ElbSecurityGroup { get; set; }

        /// <summary>
        /// The cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterId")]
        public Input<string>? KubernetesClusterId { get; set; }

        /// <summary>
        /// Legacy cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterTag")]
        public Input<string>? KubernetesClusterTag { get; set; }

        /// <summary>
        /// IAM role to assume when interaction with AWS APIs (string)
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// Enables using a specific RouteTable (string)
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
        /// </summary>
        [Input("vpc")]
        public Input<string>? Vpc { get; set; }

        /// <summary>
        /// The AWS zone (string)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterCloudProviderAwsCloudProviderGlobalArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudProviderGlobalGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Disables the automatic ingress creation. Default `false` (bool)
        /// </summary>
        [Input("disableSecurityGroupIngress")]
        public Input<bool>? DisableSecurityGroupIngress { get; set; }

        /// <summary>
        /// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
        /// </summary>
        [Input("disableStrictZoneCheck")]
        public Input<bool>? DisableStrictZoneCheck { get; set; }

        /// <summary>
        /// Use these ELB security groups instead create new (string)
        /// </summary>
        [Input("elbSecurityGroup")]
        public Input<string>? ElbSecurityGroup { get; set; }

        /// <summary>
        /// The cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterId")]
        public Input<string>? KubernetesClusterId { get; set; }

        /// <summary>
        /// Legacy cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        [Input("kubernetesClusterTag")]
        public Input<string>? KubernetesClusterTag { get; set; }

        /// <summary>
        /// IAM role to assume when interaction with AWS APIs (string)
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// Enables using a specific RouteTable (string)
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
        /// </summary>
        [Input("vpc")]
        public Input<string>? Vpc { get; set; }

        /// <summary>
        /// The AWS zone (string)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterCloudProviderAwsCloudProviderGlobalGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudProviderServiceOverridesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingMethod")]
        public Input<string>? SigningMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingName")]
        public Input<string>? SigningName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingRegion")]
        public Input<string>? SigningRegion { get; set; }

        /// <summary>
        /// Registry URL (string)
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ClusterCloudProviderAwsCloudProviderServiceOverridesArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAwsCloudProviderServiceOverridesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingMethod")]
        public Input<string>? SigningMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingName")]
        public Input<string>? SigningName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("signingRegion")]
        public Input<string>? SigningRegion { get; set; }

        /// <summary>
        /// Registry URL (string)
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ClusterCloudProviderAwsCloudProviderServiceOverridesGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAzureCloudConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPassword")]
        public Input<string>? AadClientCertPassword { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPath")]
        public Input<string>? AadClientCertPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientId", required: true)]
        public Input<string> AadClientId { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientSecret", required: true)]
        public Input<string> AadClientSecret { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderBackoff")]
        public Input<bool>? CloudProviderBackoff { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffDuration")]
        public Input<int>? CloudProviderBackoffDuration { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffExponent")]
        public Input<int>? CloudProviderBackoffExponent { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffJitter")]
        public Input<int>? CloudProviderBackoffJitter { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffRetries")]
        public Input<int>? CloudProviderBackoffRetries { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderRateLimit")]
        public Input<bool>? CloudProviderRateLimit { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitBucket")]
        public Input<int>? CloudProviderRateLimitBucket { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitQps")]
        public Input<int>? CloudProviderRateLimitQps { get; set; }

        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("maximumLoadBalancerRuleCount")]
        public Input<int>? MaximumLoadBalancerRuleCount { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryAvailabilitySetName")]
        public Input<string>? PrimaryAvailabilitySetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryScaleSetName")]
        public Input<string>? PrimaryScaleSetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useInstanceMetadata")]
        public Input<bool>? UseInstanceMetadata { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useManagedIdentityExtension")]
        public Input<bool>? UseManagedIdentityExtension { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmType")]
        public Input<string>? VmType { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetName")]
        public Input<string>? VnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetResourceGroup")]
        public Input<string>? VnetResourceGroup { get; set; }

        public ClusterCloudProviderAzureCloudConfigArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAzureCloudConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPassword")]
        public Input<string>? AadClientCertPassword { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPath")]
        public Input<string>? AadClientCertPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientId", required: true)]
        public Input<string> AadClientId { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientSecret", required: true)]
        public Input<string> AadClientSecret { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderBackoff")]
        public Input<bool>? CloudProviderBackoff { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffDuration")]
        public Input<int>? CloudProviderBackoffDuration { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffExponent")]
        public Input<int>? CloudProviderBackoffExponent { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffJitter")]
        public Input<int>? CloudProviderBackoffJitter { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffRetries")]
        public Input<int>? CloudProviderBackoffRetries { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderRateLimit")]
        public Input<bool>? CloudProviderRateLimit { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitBucket")]
        public Input<int>? CloudProviderRateLimitBucket { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitQps")]
        public Input<int>? CloudProviderRateLimitQps { get; set; }

        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("maximumLoadBalancerRuleCount")]
        public Input<int>? MaximumLoadBalancerRuleCount { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryAvailabilitySetName")]
        public Input<string>? PrimaryAvailabilitySetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryScaleSetName")]
        public Input<string>? PrimaryScaleSetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useInstanceMetadata")]
        public Input<bool>? UseInstanceMetadata { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useManagedIdentityExtension")]
        public Input<bool>? UseManagedIdentityExtension { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmType")]
        public Input<string>? VmType { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetName")]
        public Input<string>? VnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetResourceGroup")]
        public Input<string>? VnetResourceGroup { get; set; }

        public ClusterCloudProviderAzureCloudConfigGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAzureCloudProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPassword")]
        public Input<string>? AadClientCertPassword { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPath")]
        public Input<string>? AadClientCertPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientId", required: true)]
        public Input<string> AadClientId { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientSecret", required: true)]
        public Input<string> AadClientSecret { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderBackoff")]
        public Input<bool>? CloudProviderBackoff { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffDuration")]
        public Input<int>? CloudProviderBackoffDuration { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffExponent")]
        public Input<int>? CloudProviderBackoffExponent { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffJitter")]
        public Input<int>? CloudProviderBackoffJitter { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffRetries")]
        public Input<int>? CloudProviderBackoffRetries { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderRateLimit")]
        public Input<bool>? CloudProviderRateLimit { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitBucket")]
        public Input<int>? CloudProviderRateLimitBucket { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitQps")]
        public Input<int>? CloudProviderRateLimitQps { get; set; }

        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("maximumLoadBalancerRuleCount")]
        public Input<int>? MaximumLoadBalancerRuleCount { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryAvailabilitySetName")]
        public Input<string>? PrimaryAvailabilitySetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryScaleSetName")]
        public Input<string>? PrimaryScaleSetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useInstanceMetadata")]
        public Input<bool>? UseInstanceMetadata { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useManagedIdentityExtension")]
        public Input<bool>? UseManagedIdentityExtension { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmType")]
        public Input<string>? VmType { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetName")]
        public Input<string>? VnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetResourceGroup")]
        public Input<string>? VnetResourceGroup { get; set; }

        public ClusterCloudProviderAzureCloudProviderArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderAzureCloudProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPassword")]
        public Input<string>? AadClientCertPassword { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientCertPath")]
        public Input<string>? AadClientCertPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientId", required: true)]
        public Input<string> AadClientId { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("aadClientSecret", required: true)]
        public Input<string> AadClientSecret { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderBackoff")]
        public Input<bool>? CloudProviderBackoff { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffDuration")]
        public Input<int>? CloudProviderBackoffDuration { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffExponent")]
        public Input<int>? CloudProviderBackoffExponent { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffJitter")]
        public Input<int>? CloudProviderBackoffJitter { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderBackoffRetries")]
        public Input<int>? CloudProviderBackoffRetries { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("cloudProviderRateLimit")]
        public Input<bool>? CloudProviderRateLimit { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitBucket")]
        public Input<int>? CloudProviderRateLimitBucket { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("cloudProviderRateLimitQps")]
        public Input<int>? CloudProviderRateLimitQps { get; set; }

        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("maximumLoadBalancerRuleCount")]
        public Input<int>? MaximumLoadBalancerRuleCount { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryAvailabilitySetName")]
        public Input<string>? PrimaryAvailabilitySetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("primaryScaleSetName")]
        public Input<string>? PrimaryScaleSetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useInstanceMetadata")]
        public Input<bool>? UseInstanceMetadata { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useManagedIdentityExtension")]
        public Input<bool>? UseManagedIdentityExtension { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmType")]
        public Input<string>? VmType { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetName")]
        public Input<string>? VnetName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vnetResourceGroup")]
        public Input<string>? VnetResourceGroup { get; set; }

        public ClusterCloudProviderAzureCloudProviderGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use aws_cloud_provider instead
        /// </summary>
        [Input("awsCloudConfig")]
        public Input<ClusterCloudProviderAwsCloudConfigGetArgs>? AwsCloudConfig { get; set; }

        /// <summary>
        /// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
        /// </summary>
        [Input("awsCloudProvider")]
        public Input<ClusterCloudProviderAwsCloudProviderGetArgs>? AwsCloudProvider { get; set; }

        /// <summary>
        /// Use azure_cloud_provider instead
        /// </summary>
        [Input("azureCloudConfig")]
        public Input<ClusterCloudProviderAzureCloudConfigGetArgs>? AzureCloudConfig { get; set; }

        /// <summary>
        /// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
        /// </summary>
        [Input("azureCloudProvider")]
        public Input<ClusterCloudProviderAzureCloudProviderGetArgs>? AzureCloudProvider { get; set; }

        /// <summary>
        /// Use custom_cloud_provider instead
        /// </summary>
        [Input("customCloudConfig")]
        public Input<string>? CustomCloudConfig { get; set; }

        /// <summary>
        /// Custom Cloud Provider config (string)
        /// </summary>
        [Input("customCloudProvider")]
        public Input<string>? CustomCloudProvider { get; set; }

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Use openstack_cloud_provider instead
        /// </summary>
        [Input("openstackCloudConfig")]
        public Input<ClusterCloudProviderOpenstackCloudConfigGetArgs>? OpenstackCloudConfig { get; set; }

        /// <summary>
        /// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
        /// </summary>
        [Input("openstackCloudProvider")]
        public Input<ClusterCloudProviderOpenstackCloudProviderGetArgs>? OpenstackCloudProvider { get; set; }

        /// <summary>
        /// Use vsphere_cloud_provider instead
        /// </summary>
        [Input("vsphereCloudConfig")]
        public Input<ClusterCloudProviderVsphereCloudConfigGetArgs>? VsphereCloudConfig { get; set; }

        /// <summary>
        /// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtual_center` configuration. (list maxitems:1)
        /// </summary>
        [Input("vsphereCloudProvider")]
        public Input<ClusterCloudProviderVsphereCloudProviderGetArgs>? VsphereCloudProvider { get; set; }

        public ClusterCloudProviderGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("blockStorage")]
        public Input<ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs>? BlockStorage { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global", required: true)]
        public Input<ClusterCloudProviderOpenstackCloudConfigGlobalArgs> Global { get; set; } = null!;

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("loadBalancer")]
        public Input<ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("metadata")]
        public Input<ClusterCloudProviderOpenstackCloudConfigMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("route")]
        public Input<ClusterCloudProviderOpenstackCloudConfigRouteArgs>? Route { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("bsVersion")]
        public Input<string>? BsVersion { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("ignoreVolumeAz")]
        public Input<bool>? IgnoreVolumeAz { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustDevicePath")]
        public Input<bool>? TrustDevicePath { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigBlockStorageGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("bsVersion")]
        public Input<string>? BsVersion { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("ignoreVolumeAz")]
        public Input<bool>? IgnoreVolumeAz { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustDevicePath")]
        public Input<bool>? TrustDevicePath { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigBlockStorageGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("blockStorage")]
        public Input<ClusterCloudProviderOpenstackCloudConfigBlockStorageGetArgs>? BlockStorage { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global", required: true)]
        public Input<ClusterCloudProviderOpenstackCloudConfigGlobalGetArgs> Global { get; set; } = null!;

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("loadBalancer")]
        public Input<ClusterCloudProviderOpenstackCloudConfigLoadBalancerGetArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("metadata")]
        public Input<ClusterCloudProviderOpenstackCloudConfigMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("route")]
        public Input<ClusterCloudProviderOpenstackCloudConfigRouteGetArgs>? Route { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigGlobalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("authUrl", required: true)]
        public Input<string> AuthUrl { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("caFile")]
        public Input<string>? CaFile { get; set; }

        /// <summary>
        /// Required if `domain_name` not provided. (string)
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Required if `domain_id` not provided. (string)
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Required if `tenant_id` not provided. (string)
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustId")]
        public Input<string>? TrustId { get; set; }

        /// <summary>
        /// Required if `username` not provided. (string)
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// Required if `user_id` not provided. (string)
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigGlobalArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigGlobalGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("authUrl", required: true)]
        public Input<string> AuthUrl { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("caFile")]
        public Input<string>? CaFile { get; set; }

        /// <summary>
        /// Required if `domain_name` not provided. (string)
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Required if `domain_id` not provided. (string)
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Required if `tenant_id` not provided. (string)
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustId")]
        public Input<string>? TrustId { get; set; }

        /// <summary>
        /// Required if `username` not provided. (string)
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// Required if `user_id` not provided. (string)
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigGlobalGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (bool)
        /// </summary>
        [Input("createMonitor")]
        public Input<bool>? CreateMonitor { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("floatingNetworkId")]
        public Input<string>? FloatingNetworkId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbMethod")]
        public Input<string>? LbMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbProvider")]
        public Input<string>? LbProvider { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbVersion")]
        public Input<string>? LbVersion { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("manageSecurityGroups")]
        public Input<bool>? ManageSecurityGroups { get; set; }

        /// <summary>
        /// Default `60s` (string)
        /// </summary>
        [Input("monitorDelay")]
        public Input<string>? MonitorDelay { get; set; }

        /// <summary>
        /// Default 5 (int)
        /// </summary>
        [Input("monitorMaxRetries")]
        public Input<int>? MonitorMaxRetries { get; set; }

        /// <summary>
        /// Default `30s` (string)
        /// </summary>
        [Input("monitorTimeout")]
        public Input<string>? MonitorTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useOctavia")]
        public Input<bool>? UseOctavia { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigLoadBalancerGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (bool)
        /// </summary>
        [Input("createMonitor")]
        public Input<bool>? CreateMonitor { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("floatingNetworkId")]
        public Input<string>? FloatingNetworkId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbMethod")]
        public Input<string>? LbMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbProvider")]
        public Input<string>? LbProvider { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbVersion")]
        public Input<string>? LbVersion { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("manageSecurityGroups")]
        public Input<bool>? ManageSecurityGroups { get; set; }

        /// <summary>
        /// Default `60s` (string)
        /// </summary>
        [Input("monitorDelay")]
        public Input<string>? MonitorDelay { get; set; }

        /// <summary>
        /// Default 5 (int)
        /// </summary>
        [Input("monitorMaxRetries")]
        public Input<int>? MonitorMaxRetries { get; set; }

        /// <summary>
        /// Default `30s` (string)
        /// </summary>
        [Input("monitorTimeout")]
        public Input<string>? MonitorTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useOctavia")]
        public Input<bool>? UseOctavia { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigLoadBalancerGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigMetadataArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (int)
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("searchOrder")]
        public Input<string>? SearchOrder { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigMetadataArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigMetadataGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (int)
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("searchOrder")]
        public Input<string>? SearchOrder { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigMetadataGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigRouteArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigRouteArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudConfigRouteGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public ClusterCloudProviderOpenstackCloudConfigRouteGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("blockStorage")]
        public Input<ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs>? BlockStorage { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global", required: true)]
        public Input<ClusterCloudProviderOpenstackCloudProviderGlobalArgs> Global { get; set; } = null!;

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("loadBalancer")]
        public Input<ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("metadata")]
        public Input<ClusterCloudProviderOpenstackCloudProviderMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("route")]
        public Input<ClusterCloudProviderOpenstackCloudProviderRouteArgs>? Route { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("bsVersion")]
        public Input<string>? BsVersion { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("ignoreVolumeAz")]
        public Input<bool>? IgnoreVolumeAz { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustDevicePath")]
        public Input<bool>? TrustDevicePath { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderBlockStorageGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("bsVersion")]
        public Input<string>? BsVersion { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("ignoreVolumeAz")]
        public Input<bool>? IgnoreVolumeAz { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustDevicePath")]
        public Input<bool>? TrustDevicePath { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderBlockStorageGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("blockStorage")]
        public Input<ClusterCloudProviderOpenstackCloudProviderBlockStorageGetArgs>? BlockStorage { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global", required: true)]
        public Input<ClusterCloudProviderOpenstackCloudProviderGlobalGetArgs> Global { get; set; } = null!;

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("loadBalancer")]
        public Input<ClusterCloudProviderOpenstackCloudProviderLoadBalancerGetArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("metadata")]
        public Input<ClusterCloudProviderOpenstackCloudProviderMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("route")]
        public Input<ClusterCloudProviderOpenstackCloudProviderRouteGetArgs>? Route { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderGlobalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("authUrl", required: true)]
        public Input<string> AuthUrl { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("caFile")]
        public Input<string>? CaFile { get; set; }

        /// <summary>
        /// Required if `domain_name` not provided. (string)
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Required if `domain_id` not provided. (string)
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Required if `tenant_id` not provided. (string)
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustId")]
        public Input<string>? TrustId { get; set; }

        /// <summary>
        /// Required if `username` not provided. (string)
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// Required if `user_id` not provided. (string)
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderGlobalArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderGlobalGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("authUrl", required: true)]
        public Input<string> AuthUrl { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("caFile")]
        public Input<string>? CaFile { get; set; }

        /// <summary>
        /// Required if `domain_name` not provided. (string)
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Required if `domain_id` not provided. (string)
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Required if `tenant_id` not provided. (string)
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("trustId")]
        public Input<string>? TrustId { get; set; }

        /// <summary>
        /// Required if `username` not provided. (string)
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// Required if `user_id` not provided. (string)
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderGlobalGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (bool)
        /// </summary>
        [Input("createMonitor")]
        public Input<bool>? CreateMonitor { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("floatingNetworkId")]
        public Input<string>? FloatingNetworkId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbMethod")]
        public Input<string>? LbMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbProvider")]
        public Input<string>? LbProvider { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbVersion")]
        public Input<string>? LbVersion { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("manageSecurityGroups")]
        public Input<bool>? ManageSecurityGroups { get; set; }

        /// <summary>
        /// Default `60s` (string)
        /// </summary>
        [Input("monitorDelay")]
        public Input<string>? MonitorDelay { get; set; }

        /// <summary>
        /// Default 5 (int)
        /// </summary>
        [Input("monitorMaxRetries")]
        public Input<int>? MonitorMaxRetries { get; set; }

        /// <summary>
        /// Default `30s` (string)
        /// </summary>
        [Input("monitorTimeout")]
        public Input<string>? MonitorTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useOctavia")]
        public Input<bool>? UseOctavia { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderLoadBalancerGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (bool)
        /// </summary>
        [Input("createMonitor")]
        public Input<bool>? CreateMonitor { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("floatingNetworkId")]
        public Input<string>? FloatingNetworkId { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbMethod")]
        public Input<string>? LbMethod { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbProvider")]
        public Input<string>? LbProvider { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("lbVersion")]
        public Input<string>? LbVersion { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("manageSecurityGroups")]
        public Input<bool>? ManageSecurityGroups { get; set; }

        /// <summary>
        /// Default `60s` (string)
        /// </summary>
        [Input("monitorDelay")]
        public Input<string>? MonitorDelay { get; set; }

        /// <summary>
        /// Default 5 (int)
        /// </summary>
        [Input("monitorMaxRetries")]
        public Input<int>? MonitorMaxRetries { get; set; }

        /// <summary>
        /// Default `30s` (string)
        /// </summary>
        [Input("monitorTimeout")]
        public Input<string>? MonitorTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("useOctavia")]
        public Input<bool>? UseOctavia { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderLoadBalancerGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderMetadataArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (int)
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("searchOrder")]
        public Input<string>? SearchOrder { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderMetadataArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderMetadataGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (int)
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("searchOrder")]
        public Input<string>? SearchOrder { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderMetadataGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderRouteArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderRouteArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderOpenstackCloudProviderRouteGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public ClusterCloudProviderOpenstackCloudProviderRouteGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("disk")]
        public Input<ClusterCloudProviderVsphereCloudConfigDiskArgs>? Disk { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderVsphereCloudConfigGlobalArgs>? Global { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("network")]
        public Input<ClusterCloudProviderVsphereCloudConfigNetworkArgs>? Network { get; set; }

        [Input("virtualCenters", required: true)]
        private InputList<ClusterCloudProviderVsphereCloudConfigVirtualCentersArgs>? _virtualCenters;

        /// <summary>
        /// (List)
        /// </summary>
        public InputList<ClusterCloudProviderVsphereCloudConfigVirtualCentersArgs> VirtualCenters
        {
            get => _virtualCenters ?? (_virtualCenters = new InputList<ClusterCloudProviderVsphereCloudConfigVirtualCentersArgs>());
            set => _virtualCenters = value;
        }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("workspace", required: true)]
        public Input<ClusterCloudProviderVsphereCloudConfigWorkspaceArgs> Workspace { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudConfigArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigDiskArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("scsiControllerType")]
        public Input<string>? ScsiControllerType { get; set; }

        public ClusterCloudProviderVsphereCloudConfigDiskArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigDiskGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("scsiControllerType")]
        public Input<string>? ScsiControllerType { get; set; }

        public ClusterCloudProviderVsphereCloudConfigDiskGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("disk")]
        public Input<ClusterCloudProviderVsphereCloudConfigDiskGetArgs>? Disk { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderVsphereCloudConfigGlobalGetArgs>? Global { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("network")]
        public Input<ClusterCloudProviderVsphereCloudConfigNetworkGetArgs>? Network { get; set; }

        [Input("virtualCenters", required: true)]
        private InputList<ClusterCloudProviderVsphereCloudConfigVirtualCentersGetArgs>? _virtualCenters;

        /// <summary>
        /// (List)
        /// </summary>
        public InputList<ClusterCloudProviderVsphereCloudConfigVirtualCentersGetArgs> VirtualCenters
        {
            get => _virtualCenters ?? (_virtualCenters = new InputList<ClusterCloudProviderVsphereCloudConfigVirtualCentersGetArgs>());
            set => _virtualCenters = value;
        }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("workspace", required: true)]
        public Input<ClusterCloudProviderVsphereCloudConfigWorkspaceGetArgs> Workspace { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudConfigGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigGlobalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters")]
        public Input<string>? Datacenters { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datastore")]
        public Input<string>? Datastore { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("insecureFlag")]
        public Input<bool>? InsecureFlag { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmUuid")]
        public Input<string>? VmUuid { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public ClusterCloudProviderVsphereCloudConfigGlobalArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigGlobalGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters")]
        public Input<string>? Datacenters { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datastore")]
        public Input<string>? Datastore { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("insecureFlag")]
        public Input<bool>? InsecureFlag { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmUuid")]
        public Input<string>? VmUuid { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public ClusterCloudProviderVsphereCloudConfigGlobalGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigNetworkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("publicNetwork")]
        public Input<string>? PublicNetwork { get; set; }

        public ClusterCloudProviderVsphereCloudConfigNetworkArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigNetworkGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("publicNetwork")]
        public Input<string>? PublicNetwork { get; set; }

        public ClusterCloudProviderVsphereCloudConfigNetworkGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigVirtualCentersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters", required: true)]
        public Input<string> Datacenters { get; set; } = null!;

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudConfigVirtualCentersArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigVirtualCentersGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters", required: true)]
        public Input<string> Datacenters { get; set; } = null!;

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudConfigVirtualCentersGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigWorkspaceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter", required: true)]
        public Input<string> Datacenter { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("defaultDatastore")]
        public Input<string>? DefaultDatastore { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourcepoolPath")]
        public Input<string>? ResourcepoolPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudConfigWorkspaceArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudConfigWorkspaceGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter", required: true)]
        public Input<string> Datacenter { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("defaultDatastore")]
        public Input<string>? DefaultDatastore { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourcepoolPath")]
        public Input<string>? ResourcepoolPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudConfigWorkspaceGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("disk")]
        public Input<ClusterCloudProviderVsphereCloudProviderDiskArgs>? Disk { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderVsphereCloudProviderGlobalArgs>? Global { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("network")]
        public Input<ClusterCloudProviderVsphereCloudProviderNetworkArgs>? Network { get; set; }

        [Input("virtualCenters", required: true)]
        private InputList<ClusterCloudProviderVsphereCloudProviderVirtualCentersArgs>? _virtualCenters;

        /// <summary>
        /// (List)
        /// </summary>
        public InputList<ClusterCloudProviderVsphereCloudProviderVirtualCentersArgs> VirtualCenters
        {
            get => _virtualCenters ?? (_virtualCenters = new InputList<ClusterCloudProviderVsphereCloudProviderVirtualCentersArgs>());
            set => _virtualCenters = value;
        }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("workspace", required: true)]
        public Input<ClusterCloudProviderVsphereCloudProviderWorkspaceArgs> Workspace { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudProviderArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderDiskArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("scsiControllerType")]
        public Input<string>? ScsiControllerType { get; set; }

        public ClusterCloudProviderVsphereCloudProviderDiskArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderDiskGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("scsiControllerType")]
        public Input<string>? ScsiControllerType { get; set; }

        public ClusterCloudProviderVsphereCloudProviderDiskGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("disk")]
        public Input<ClusterCloudProviderVsphereCloudProviderDiskGetArgs>? Disk { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("global")]
        public Input<ClusterCloudProviderVsphereCloudProviderGlobalGetArgs>? Global { get; set; }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("network")]
        public Input<ClusterCloudProviderVsphereCloudProviderNetworkGetArgs>? Network { get; set; }

        [Input("virtualCenters", required: true)]
        private InputList<ClusterCloudProviderVsphereCloudProviderVirtualCentersGetArgs>? _virtualCenters;

        /// <summary>
        /// (List)
        /// </summary>
        public InputList<ClusterCloudProviderVsphereCloudProviderVirtualCentersGetArgs> VirtualCenters
        {
            get => _virtualCenters ?? (_virtualCenters = new InputList<ClusterCloudProviderVsphereCloudProviderVirtualCentersGetArgs>());
            set => _virtualCenters = value;
        }

        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        [Input("workspace", required: true)]
        public Input<ClusterCloudProviderVsphereCloudProviderWorkspaceGetArgs> Workspace { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudProviderGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderGlobalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters")]
        public Input<string>? Datacenters { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datastore")]
        public Input<string>? Datastore { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("insecureFlag")]
        public Input<bool>? InsecureFlag { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmUuid")]
        public Input<string>? VmUuid { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public ClusterCloudProviderVsphereCloudProviderGlobalArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderGlobalGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters")]
        public Input<string>? Datacenters { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datastore")]
        public Input<string>? Datastore { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("insecureFlag")]
        public Input<bool>? InsecureFlag { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmUuid")]
        public Input<string>? VmUuid { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public ClusterCloudProviderVsphereCloudProviderGlobalGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderNetworkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("publicNetwork")]
        public Input<string>? PublicNetwork { get; set; }

        public ClusterCloudProviderVsphereCloudProviderNetworkArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderNetworkGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("publicNetwork")]
        public Input<string>? PublicNetwork { get; set; }

        public ClusterCloudProviderVsphereCloudProviderNetworkGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderVirtualCentersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters", required: true)]
        public Input<string> Datacenters { get; set; } = null!;

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudProviderVirtualCentersArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderVirtualCentersGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters", required: true)]
        public Input<string> Datacenters { get; set; } = null!;

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudProviderVirtualCentersGetArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderWorkspaceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter", required: true)]
        public Input<string> Datacenter { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("defaultDatastore")]
        public Input<string>? DefaultDatastore { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourcepoolPath")]
        public Input<string>? ResourcepoolPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudProviderWorkspaceArgs()
        {
        }
    }

    public sealed class ClusterCloudProviderVsphereCloudProviderWorkspaceGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter", required: true)]
        public Input<string> Datacenter { get; set; } = null!;

        /// <summary>
        /// (string)
        /// </summary>
        [Input("defaultDatastore")]
        public Input<string>? DefaultDatastore { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("resourcepoolPath")]
        public Input<string>? ResourcepoolPath { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        public ClusterCloudProviderVsphereCloudProviderWorkspaceGetArgs()
        {
        }
    }

    public sealed class ClusterControlPlaneHostsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        public ClusterControlPlaneHostsGetArgs()
        {
        }
    }

    public sealed class ClusterDnsArgs : Pulumi.ResourceArgs
    {
        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        [Input("reverseCidrs")]
        private InputList<string>? _reverseCidrs;

        /// <summary>
        /// Reverse CIDRs  (list)
        /// </summary>
        public InputList<string> ReverseCidrs
        {
            get => _reverseCidrs ?? (_reverseCidrs = new InputList<string>());
            set => _reverseCidrs = value;
        }

        [Input("upstreamNameservers")]
        private InputList<string>? _upstreamNameservers;

        /// <summary>
        /// Upstream nameservers  (list)
        /// </summary>
        public InputList<string> UpstreamNameservers
        {
            get => _upstreamNameservers ?? (_upstreamNameservers = new InputList<string>());
            set => _upstreamNameservers = value;
        }

        public ClusterDnsArgs()
        {
        }
    }

    public sealed class ClusterDnsGetArgs : Pulumi.ResourceArgs
    {
        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        [Input("reverseCidrs")]
        private InputList<string>? _reverseCidrs;

        /// <summary>
        /// Reverse CIDRs  (list)
        /// </summary>
        public InputList<string> ReverseCidrs
        {
            get => _reverseCidrs ?? (_reverseCidrs = new InputList<string>());
            set => _reverseCidrs = value;
        }

        [Input("upstreamNameservers")]
        private InputList<string>? _upstreamNameservers;

        /// <summary>
        /// Upstream nameservers  (list)
        /// </summary>
        public InputList<string> UpstreamNameservers
        {
            get => _upstreamNameservers ?? (_upstreamNameservers = new InputList<string>());
            set => _upstreamNameservers = value;
        }

        public ClusterDnsGetArgs()
        {
        }
    }

    public sealed class ClusterEtcdHostsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        public ClusterEtcdHostsGetArgs()
        {
        }
    }

    public sealed class ClusterInactiveHostsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        public ClusterInactiveHostsGetArgs()
        {
        }
    }

    public sealed class ClusterIngressArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
        /// </summary>
        [Input("dnsPolicy")]
        public Input<string>? DnsPolicy { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        public ClusterIngressArgs()
        {
        }
    }

    public sealed class ClusterIngressGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
        /// </summary>
        [Input("dnsPolicy")]
        public Input<string>? DnsPolicy { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        public ClusterIngressGetArgs()
        {
        }
    }

    public sealed class ClusterMonitoringArgs : Pulumi.ResourceArgs
    {
        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        public ClusterMonitoringArgs()
        {
        }
    }

    public sealed class ClusterMonitoringGetArgs : Pulumi.ResourceArgs
    {
        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        public ClusterMonitoringGetArgs()
        {
        }
    }

    public sealed class ClusterNetworkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Calico network provider config (list maxitems:1)
        /// </summary>
        [Input("calicoNetworkProvider")]
        public Input<ClusterNetworkCalicoNetworkProviderArgs>? CalicoNetworkProvider { get; set; }

        /// <summary>
        /// Canal network provider config (list maxitems:1)
        /// </summary>
        [Input("canalNetworkProvider")]
        public Input<ClusterNetworkCanalNetworkProviderArgs>? CanalNetworkProvider { get; set; }

        /// <summary>
        /// Flannel network provider config (list maxitems:1)
        /// </summary>
        [Input("flannelNetworkProvider")]
        public Input<ClusterNetworkFlannelNetworkProviderArgs>? FlannelNetworkProvider { get; set; }

        /// <summary>
        /// Network provider MTU. Default `0` (int)
        /// </summary>
        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        /// <summary>
        /// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
        /// </summary>
        [Input("plugin")]
        public Input<string>? Plugin { get; set; }

        /// <summary>
        /// Weave network provider config (list maxitems:1)
        /// </summary>
        [Input("weaveNetworkProvider")]
        public Input<ClusterNetworkWeaveNetworkProviderArgs>? WeaveNetworkProvider { get; set; }

        public ClusterNetworkArgs()
        {
        }
    }

    public sealed class ClusterNetworkCalicoNetworkProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Calico cloud provider (string)
        /// </summary>
        [Input("cloudProvider")]
        public Input<string>? CloudProvider { get; set; }

        public ClusterNetworkCalicoNetworkProviderArgs()
        {
        }
    }

    public sealed class ClusterNetworkCalicoNetworkProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Calico cloud provider (string)
        /// </summary>
        [Input("cloudProvider")]
        public Input<string>? CloudProvider { get; set; }

        public ClusterNetworkCalicoNetworkProviderGetArgs()
        {
        }
    }

    public sealed class ClusterNetworkCanalNetworkProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flannel network interface (string)
        /// </summary>
        [Input("iface")]
        public Input<string>? Iface { get; set; }

        public ClusterNetworkCanalNetworkProviderArgs()
        {
        }
    }

    public sealed class ClusterNetworkCanalNetworkProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flannel network interface (string)
        /// </summary>
        [Input("iface")]
        public Input<string>? Iface { get; set; }

        public ClusterNetworkCanalNetworkProviderGetArgs()
        {
        }
    }

    public sealed class ClusterNetworkFlannelNetworkProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flannel network interface (string)
        /// </summary>
        [Input("iface")]
        public Input<string>? Iface { get; set; }

        public ClusterNetworkFlannelNetworkProviderArgs()
        {
        }
    }

    public sealed class ClusterNetworkFlannelNetworkProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flannel network interface (string)
        /// </summary>
        [Input("iface")]
        public Input<string>? Iface { get; set; }

        public ClusterNetworkFlannelNetworkProviderGetArgs()
        {
        }
    }

    public sealed class ClusterNetworkGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Calico network provider config (list maxitems:1)
        /// </summary>
        [Input("calicoNetworkProvider")]
        public Input<ClusterNetworkCalicoNetworkProviderGetArgs>? CalicoNetworkProvider { get; set; }

        /// <summary>
        /// Canal network provider config (list maxitems:1)
        /// </summary>
        [Input("canalNetworkProvider")]
        public Input<ClusterNetworkCanalNetworkProviderGetArgs>? CanalNetworkProvider { get; set; }

        /// <summary>
        /// Flannel network provider config (list maxitems:1)
        /// </summary>
        [Input("flannelNetworkProvider")]
        public Input<ClusterNetworkFlannelNetworkProviderGetArgs>? FlannelNetworkProvider { get; set; }

        /// <summary>
        /// Network provider MTU. Default `0` (int)
        /// </summary>
        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        [Input("options")]
        private InputMap<object>? _options;

        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public InputMap<object> Options
        {
            get => _options ?? (_options = new InputMap<object>());
            set => _options = value;
        }

        /// <summary>
        /// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
        /// </summary>
        [Input("plugin")]
        public Input<string>? Plugin { get; set; }

        /// <summary>
        /// Weave network provider config (list maxitems:1)
        /// </summary>
        [Input("weaveNetworkProvider")]
        public Input<ClusterNetworkWeaveNetworkProviderGetArgs>? WeaveNetworkProvider { get; set; }

        public ClusterNetworkGetArgs()
        {
        }
    }

    public sealed class ClusterNetworkWeaveNetworkProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        public ClusterNetworkWeaveNetworkProviderArgs()
        {
        }
    }

    public sealed class ClusterNetworkWeaveNetworkProviderGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        public ClusterNetworkWeaveNetworkProviderGetArgs()
        {
        }
    }

    public sealed class ClusterNodesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Docker socket on the node that will be used in tunneling (string)
        /// </summary>
        [Input("dockerSocket")]
        public Input<string>? DockerSocket { get; set; }

        /// <summary>
        /// Hostname override for node (string)
        /// </summary>
        [Input("hostnameOverride")]
        public Input<string>? HostnameOverride { get; set; }

        /// <summary>
        /// Internal address that will be used for components communication (string)
        /// </summary>
        [Input("internalAddress")]
        public Input<string>? InternalAddress { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Node labels (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        [Input("roles", required: true)]
        private InputList<string>? _roles;

        /// <summary>
        /// Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)
        /// </summary>
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        [Input("rolesDeprecated")]
        public Input<string>? RolesDeprecated { get; set; }

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Input("sshAgentAuth")]
        public Input<bool>? SshAgentAuth { get; set; }

        /// <summary>
        /// SSH Certificate (string)
        /// </summary>
        [Input("sshCert")]
        public Input<string>? SshCert { get; set; }

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Input("sshCertPath")]
        public Input<string>? SshCertPath { get; set; }

        /// <summary>
        /// SSH Private Key (string)
        /// </summary>
        [Input("sshKey")]
        public Input<string>? SshKey { get; set; }

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Input("sshKeyPath")]
        public Input<string>? SshKeyPath { get; set; }

        [Input("taints")]
        private InputList<ClusterNodesTaintsArgs>? _taints;

        /// <summary>
        /// Node taints (list)
        /// </summary>
        public InputList<ClusterNodesTaintsArgs> Taints
        {
            get => _taints ?? (_taints = new InputList<ClusterNodesTaintsArgs>());
            set => _taints = value;
        }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterNodesArgs()
        {
        }
    }

    public sealed class ClusterNodesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Docker socket on the node that will be used in tunneling (string)
        /// </summary>
        [Input("dockerSocket")]
        public Input<string>? DockerSocket { get; set; }

        /// <summary>
        /// Hostname override for node (string)
        /// </summary>
        [Input("hostnameOverride")]
        public Input<string>? HostnameOverride { get; set; }

        /// <summary>
        /// Internal address that will be used for components communication (string)
        /// </summary>
        [Input("internalAddress")]
        public Input<string>? InternalAddress { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Node labels (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        [Input("roles", required: true)]
        private InputList<string>? _roles;

        /// <summary>
        /// Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)
        /// </summary>
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        [Input("rolesDeprecated")]
        public Input<string>? RolesDeprecated { get; set; }

        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        [Input("sshAgentAuth")]
        public Input<bool>? SshAgentAuth { get; set; }

        /// <summary>
        /// SSH Certificate (string)
        /// </summary>
        [Input("sshCert")]
        public Input<string>? SshCert { get; set; }

        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        [Input("sshCertPath")]
        public Input<string>? SshCertPath { get; set; }

        /// <summary>
        /// SSH Private Key (string)
        /// </summary>
        [Input("sshKey")]
        public Input<string>? SshKey { get; set; }

        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        [Input("sshKeyPath")]
        public Input<string>? SshKeyPath { get; set; }

        [Input("taints")]
        private InputList<ClusterNodesTaintsGetArgs>? _taints;

        /// <summary>
        /// Node taints (list)
        /// </summary>
        public InputList<ClusterNodesTaintsGetArgs> Taints
        {
            get => _taints ?? (_taints = new InputList<ClusterNodesTaintsGetArgs>());
            set => _taints = value;
        }

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public ClusterNodesGetArgs()
        {
        }
    }

    public sealed class ClusterNodesTaintsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)
        /// </summary>
        [Input("effect")]
        public Input<string>? Effect { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Taint value (string)
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ClusterNodesTaintsArgs()
        {
        }
    }

    public sealed class ClusterNodesTaintsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)
        /// </summary>
        [Input("effect")]
        public Input<string>? Effect { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Taint value (string)
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ClusterNodesTaintsGetArgs()
        {
        }
    }

    public sealed class ClusterPrivateRegistriesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set as default registry. Default `false` (bool)
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Registry URL (string)
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public ClusterPrivateRegistriesArgs()
        {
        }
    }

    public sealed class ClusterPrivateRegistriesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set as default registry. Default `false` (bool)
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Registry password (string)
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Registry URL (string)
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// Registry user (string)
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public ClusterPrivateRegistriesGetArgs()
        {
        }
    }

    public sealed class ClusterRestoreArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Restore cluster. Default `false` (bool)
        /// </summary>
        [Input("restore")]
        public Input<bool>? Restore { get; set; }

        /// <summary>
        /// Snapshot name (string)
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        public ClusterRestoreArgs()
        {
        }
    }

    public sealed class ClusterRestoreGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Restore cluster. Default `false` (bool)
        /// </summary>
        [Input("restore")]
        public Input<bool>? Restore { get; set; }

        /// <summary>
        /// Snapshot name (string)
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        public ClusterRestoreGetArgs()
        {
        }
    }

    public sealed class ClusterRotateCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rotate CA Certificates. Default `false` (bool)
        /// </summary>
        [Input("caCertificates")]
        public Input<bool>? CaCertificates { get; set; }

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        public ClusterRotateCertificatesArgs()
        {
        }
    }

    public sealed class ClusterRotateCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rotate CA Certificates. Default `false` (bool)
        /// </summary>
        [Input("caCertificates")]
        public Input<bool>? CaCertificates { get; set; }

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        public ClusterRotateCertificatesGetArgs()
        {
        }
    }

    public sealed class ClusterRunningSystemImagesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Docker image for alpine (string)
        /// </summary>
        [Input("alpine")]
        public Input<string>? Alpine { get; set; }

        /// <summary>
        /// Docker image for calico_cni (string)
        /// </summary>
        [Input("calicoCni")]
        public Input<string>? CalicoCni { get; set; }

        /// <summary>
        /// Docker image for calico_controllers (string)
        /// </summary>
        [Input("calicoControllers")]
        public Input<string>? CalicoControllers { get; set; }

        /// <summary>
        /// Docker image for calico_ctl (string)
        /// </summary>
        [Input("calicoCtl")]
        public Input<string>? CalicoCtl { get; set; }

        /// <summary>
        /// Docker image for calico_flex_vol (string)
        /// </summary>
        [Input("calicoFlexVol")]
        public Input<string>? CalicoFlexVol { get; set; }

        /// <summary>
        /// Docker image for calico_node (string)
        /// </summary>
        [Input("calicoNode")]
        public Input<string>? CalicoNode { get; set; }

        /// <summary>
        /// Docker image for canal_cni (string)
        /// </summary>
        [Input("canalCni")]
        public Input<string>? CanalCni { get; set; }

        /// <summary>
        /// Docker image for canal_flannel (string)
        /// </summary>
        [Input("canalFlannel")]
        public Input<string>? CanalFlannel { get; set; }

        /// <summary>
        /// Docker image for canal_flex_vol (string)
        /// </summary>
        [Input("canalFlexVol")]
        public Input<string>? CanalFlexVol { get; set; }

        /// <summary>
        /// Docker image for canal_node (string)
        /// </summary>
        [Input("canalNode")]
        public Input<string>? CanalNode { get; set; }

        /// <summary>
        /// Docker image for cert_downloader (string)
        /// </summary>
        [Input("certDownloader")]
        public Input<string>? CertDownloader { get; set; }

        /// <summary>
        /// Docker image for coredns (string)
        /// </summary>
        [Input("coredns")]
        public Input<string>? Coredns { get; set; }

        /// <summary>
        /// Docker image for coredns_autoscaler (string)
        /// </summary>
        [Input("corednsAutoscaler")]
        public Input<string>? CorednsAutoscaler { get; set; }

        /// <summary>
        /// Docker image for dnsmasq (string)
        /// </summary>
        [Input("dnsmasq")]
        public Input<string>? Dnsmasq { get; set; }

        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        [Input("etcd")]
        public Input<string>? Etcd { get; set; }

        /// <summary>
        /// Docker image for flannel (string)
        /// </summary>
        [Input("flannel")]
        public Input<string>? Flannel { get; set; }

        /// <summary>
        /// Docker image for flannel_cni (string)
        /// </summary>
        [Input("flannelCni")]
        public Input<string>? FlannelCni { get; set; }

        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        [Input("ingress")]
        public Input<string>? Ingress { get; set; }

        /// <summary>
        /// Docker image for ingress_backend (string)
        /// </summary>
        [Input("ingressBackend")]
        public Input<string>? IngressBackend { get; set; }

        /// <summary>
        /// Docker image for kube_dns (string)
        /// </summary>
        [Input("kubeDns")]
        public Input<string>? KubeDns { get; set; }

        /// <summary>
        /// Docker image for kube_dns_autoscaler (string)
        /// </summary>
        [Input("kubeDnsAutoscaler")]
        public Input<string>? KubeDnsAutoscaler { get; set; }

        /// <summary>
        /// Docker image for kube_dns_sidecar (string)
        /// </summary>
        [Input("kubeDnsSidecar")]
        public Input<string>? KubeDnsSidecar { get; set; }

        /// <summary>
        /// Docker image for kubernetes (string)
        /// </summary>
        [Input("kubernetes")]
        public Input<string>? Kubernetes { get; set; }

        /// <summary>
        /// Docker image for kubernetes_services_sidecar (string)
        /// </summary>
        [Input("kubernetesServicesSidecar")]
        public Input<string>? KubernetesServicesSidecar { get; set; }

        /// <summary>
        /// Docker image for metrics_server (string)
        /// </summary>
        [Input("metricsServer")]
        public Input<string>? MetricsServer { get; set; }

        /// <summary>
        /// Docker image for nginx_proxy (string)
        /// </summary>
        [Input("nginxProxy")]
        public Input<string>? NginxProxy { get; set; }

        /// <summary>
        /// Docker image for nodelocal (string)
        /// </summary>
        [Input("nodelocal")]
        public Input<string>? Nodelocal { get; set; }

        /// <summary>
        /// Docker image for pod_infra_container (string)
        /// </summary>
        [Input("podInfraContainer")]
        public Input<string>? PodInfraContainer { get; set; }

        /// <summary>
        /// Docker image for weave_cni (string)
        /// </summary>
        [Input("weaveCni")]
        public Input<string>? WeaveCni { get; set; }

        /// <summary>
        /// Docker image for weave_node (string)
        /// </summary>
        [Input("weaveNode")]
        public Input<string>? WeaveNode { get; set; }

        /// <summary>
        /// Docker image for windows_pod_infra_container (string)
        /// </summary>
        [Input("windowsPodInfraContainer")]
        public Input<string>? WindowsPodInfraContainer { get; set; }

        public ClusterRunningSystemImagesGetArgs()
        {
        }
    }

    public sealed class ClusterServicesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        [Input("etcd")]
        public Input<ClusterServicesEtcdArgs>? Etcd { get; set; }

        /// <summary>
        /// Kube API options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubeApi")]
        public Input<ClusterServicesKubeApiArgs>? KubeApi { get; set; }

        /// <summary>
        /// Kube Controller options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubeController")]
        public Input<ClusterServicesKubeControllerArgs>? KubeController { get; set; }

        /// <summary>
        /// Kubelet options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubelet")]
        public Input<ClusterServicesKubeletArgs>? Kubelet { get; set; }

        /// <summary>
        /// Kubeproxy options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubeproxy")]
        public Input<ClusterServicesKubeproxyArgs>? Kubeproxy { get; set; }

        /// <summary>
        /// Scheduler options for RKE services (list maxitems:1)
        /// </summary>
        [Input("scheduler")]
        public Input<ClusterServicesSchedulerArgs>? Scheduler { get; set; }

        public ClusterServicesArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
        /// </summary>
        [Input("backupConfig")]
        public Input<ClusterServicesEtcdBackupConfigArgs>? BackupConfig { get; set; }

        /// <summary>
        /// TLS CA certificate for etcd service (string)
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        /// <summary>
        /// TLS certificate for etcd service (string)
        /// </summary>
        [Input("cert")]
        public Input<string>? Cert { get; set; }

        /// <summary>
        /// Creation option for etcd service (string)
        /// </summary>
        [Input("creation")]
        public Input<string>? Creation { get; set; }

        [Input("externalUrls")]
        private InputList<string>? _externalUrls;

        /// <summary>
        /// External urls for etcd service (list)
        /// </summary>
        public InputList<string> ExternalUrls
        {
            get => _externalUrls ?? (_externalUrls = new InputList<string>());
            set => _externalUrls = value;
        }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("gid")]
        public Input<int>? Gid { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<string>? Retention { get; set; }

        /// <summary>
        /// Snapshot option for etcd service. Default `true` (bool)
        /// </summary>
        [Input("snapshot")]
        public Input<bool>? Snapshot { get; set; }

        /// <summary>
        /// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("uid")]
        public Input<int>? Uid { get; set; }

        public ClusterServicesEtcdArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdBackupConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Interval hours for etcd backup. Default `12` (int)
        /// </summary>
        [Input("intervalHours")]
        public Input<int>? IntervalHours { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        /// <summary>
        /// S3 config options for etcd backup (list maxitems:1)
        /// </summary>
        [Input("s3BackupConfig")]
        public Input<ClusterServicesEtcdBackupConfigS3BackupConfigArgs>? S3BackupConfig { get; set; }

        /// <summary>
        /// Safe timestamp for etcd backup. Default: `false` (bool)
        /// </summary>
        [Input("safeTimestamp")]
        public Input<bool>? SafeTimestamp { get; set; }

        public ClusterServicesEtcdBackupConfigArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdBackupConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Interval hours for etcd backup. Default `12` (int)
        /// </summary>
        [Input("intervalHours")]
        public Input<int>? IntervalHours { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        /// <summary>
        /// S3 config options for etcd backup (list maxitems:1)
        /// </summary>
        [Input("s3BackupConfig")]
        public Input<ClusterServicesEtcdBackupConfigS3BackupConfigGetArgs>? S3BackupConfig { get; set; }

        /// <summary>
        /// Safe timestamp for etcd backup. Default: `false` (bool)
        /// </summary>
        [Input("safeTimestamp")]
        public Input<bool>? SafeTimestamp { get; set; }

        public ClusterServicesEtcdBackupConfigGetArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdBackupConfigS3BackupConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access key for S3 service (string)
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// Bucket name for S3 service (string)
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Base64 encoded custom CA for S3 service. Use filebase64(&lt;FILE&gt;) for encoding file. Available from Rancher v2.2.5 (string)
        /// </summary>
        [Input("customCa")]
        public Input<string>? CustomCa { get; set; }

        /// <summary>
        /// Endpoint for S3 service (string)
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Secret key for S3 service (string)
        /// </summary>
        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        public ClusterServicesEtcdBackupConfigS3BackupConfigArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdBackupConfigS3BackupConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access key for S3 service (string)
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// Bucket name for S3 service (string)
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Base64 encoded custom CA for S3 service. Use filebase64(&lt;FILE&gt;) for encoding file. Available from Rancher v2.2.5 (string)
        /// </summary>
        [Input("customCa")]
        public Input<string>? CustomCa { get; set; }

        /// <summary>
        /// Endpoint for S3 service (string)
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Secret key for S3 service (string)
        /// </summary>
        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        public ClusterServicesEtcdBackupConfigS3BackupConfigGetArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdDeprecatedArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
        /// </summary>
        [Input("backupConfig")]
        public Input<ClusterServicesEtcdDeprecatedBackupConfigArgs>? BackupConfig { get; set; }

        /// <summary>
        /// TLS CA certificate for etcd service (string)
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        /// <summary>
        /// TLS certificate for etcd service (string)
        /// </summary>
        [Input("cert")]
        public Input<string>? Cert { get; set; }

        /// <summary>
        /// Creation option for etcd service (string)
        /// </summary>
        [Input("creation")]
        public Input<string>? Creation { get; set; }

        [Input("externalUrls")]
        private InputList<string>? _externalUrls;

        /// <summary>
        /// External urls for etcd service (list)
        /// </summary>
        public InputList<string> ExternalUrls
        {
            get => _externalUrls ?? (_externalUrls = new InputList<string>());
            set => _externalUrls = value;
        }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("gid")]
        public Input<int>? Gid { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<string>? Retention { get; set; }

        /// <summary>
        /// Snapshot option for etcd service. Default `true` (bool)
        /// </summary>
        [Input("snapshot")]
        public Input<bool>? Snapshot { get; set; }

        /// <summary>
        /// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("uid")]
        public Input<int>? Uid { get; set; }

        public ClusterServicesEtcdDeprecatedArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdDeprecatedBackupConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Interval hours for etcd backup. Default `12` (int)
        /// </summary>
        [Input("intervalHours")]
        public Input<int>? IntervalHours { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        /// <summary>
        /// S3 config options for etcd backup (list maxitems:1)
        /// </summary>
        [Input("s3BackupConfig")]
        public Input<ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs>? S3BackupConfig { get; set; }

        /// <summary>
        /// Safe timestamp for etcd backup. Default: `false` (bool)
        /// </summary>
        [Input("safeTimestamp")]
        public Input<bool>? SafeTimestamp { get; set; }

        public ClusterServicesEtcdDeprecatedBackupConfigArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdDeprecatedBackupConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Interval hours for etcd backup. Default `12` (int)
        /// </summary>
        [Input("intervalHours")]
        public Input<int>? IntervalHours { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        /// <summary>
        /// S3 config options for etcd backup (list maxitems:1)
        /// </summary>
        [Input("s3BackupConfig")]
        public Input<ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigGetArgs>? S3BackupConfig { get; set; }

        /// <summary>
        /// Safe timestamp for etcd backup. Default: `false` (bool)
        /// </summary>
        [Input("safeTimestamp")]
        public Input<bool>? SafeTimestamp { get; set; }

        public ClusterServicesEtcdDeprecatedBackupConfigGetArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access key for S3 service (string)
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// Bucket name for S3 service (string)
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Base64 encoded custom CA for S3 service. Use filebase64(&lt;FILE&gt;) for encoding file. Available from Rancher v2.2.5 (string)
        /// </summary>
        [Input("customCa")]
        public Input<string>? CustomCa { get; set; }

        /// <summary>
        /// Endpoint for S3 service (string)
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Secret key for S3 service (string)
        /// </summary>
        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        public ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access key for S3 service (string)
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// Bucket name for S3 service (string)
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Base64 encoded custom CA for S3 service. Use filebase64(&lt;FILE&gt;) for encoding file. Available from Rancher v2.2.5 (string)
        /// </summary>
        [Input("customCa")]
        public Input<string>? CustomCa { get; set; }

        /// <summary>
        /// Endpoint for S3 service (string)
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Secret key for S3 service (string)
        /// </summary>
        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        public ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigGetArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdDeprecatedGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
        /// </summary>
        [Input("backupConfig")]
        public Input<ClusterServicesEtcdDeprecatedBackupConfigGetArgs>? BackupConfig { get; set; }

        /// <summary>
        /// TLS CA certificate for etcd service (string)
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        /// <summary>
        /// TLS certificate for etcd service (string)
        /// </summary>
        [Input("cert")]
        public Input<string>? Cert { get; set; }

        /// <summary>
        /// Creation option for etcd service (string)
        /// </summary>
        [Input("creation")]
        public Input<string>? Creation { get; set; }

        [Input("externalUrls")]
        private InputList<string>? _externalUrls;

        /// <summary>
        /// External urls for etcd service (list)
        /// </summary>
        public InputList<string> ExternalUrls
        {
            get => _externalUrls ?? (_externalUrls = new InputList<string>());
            set => _externalUrls = value;
        }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("gid")]
        public Input<int>? Gid { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<string>? Retention { get; set; }

        /// <summary>
        /// Snapshot option for etcd service. Default `true` (bool)
        /// </summary>
        [Input("snapshot")]
        public Input<bool>? Snapshot { get; set; }

        /// <summary>
        /// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("uid")]
        public Input<int>? Uid { get; set; }

        public ClusterServicesEtcdDeprecatedGetArgs()
        {
        }
    }

    public sealed class ClusterServicesEtcdGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
        /// </summary>
        [Input("backupConfig")]
        public Input<ClusterServicesEtcdBackupConfigGetArgs>? BackupConfig { get; set; }

        /// <summary>
        /// TLS CA certificate for etcd service (string)
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        /// <summary>
        /// TLS certificate for etcd service (string)
        /// </summary>
        [Input("cert")]
        public Input<string>? Cert { get; set; }

        /// <summary>
        /// Creation option for etcd service (string)
        /// </summary>
        [Input("creation")]
        public Input<string>? Creation { get; set; }

        [Input("externalUrls")]
        private InputList<string>? _externalUrls;

        /// <summary>
        /// External urls for etcd service (list)
        /// </summary>
        public InputList<string> ExternalUrls
        {
            get => _externalUrls ?? (_externalUrls = new InputList<string>());
            set => _externalUrls = value;
        }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("gid")]
        public Input<int>? Gid { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        [Input("retention")]
        public Input<string>? Retention { get; set; }

        /// <summary>
        /// Snapshot option for etcd service. Default `true` (bool)
        /// </summary>
        [Input("snapshot")]
        public Input<bool>? Snapshot { get; set; }

        /// <summary>
        /// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        [Input("uid")]
        public Input<int>? Uid { get; set; }

        public ClusterServicesEtcdGetArgs()
        {
        }
    }

    public sealed class ClusterServicesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        [Input("etcd")]
        public Input<ClusterServicesEtcdGetArgs>? Etcd { get; set; }

        /// <summary>
        /// Kube API options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubeApi")]
        public Input<ClusterServicesKubeApiGetArgs>? KubeApi { get; set; }

        /// <summary>
        /// Kube Controller options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubeController")]
        public Input<ClusterServicesKubeControllerGetArgs>? KubeController { get; set; }

        /// <summary>
        /// Kubelet options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubelet")]
        public Input<ClusterServicesKubeletGetArgs>? Kubelet { get; set; }

        /// <summary>
        /// Kubeproxy options for RKE services (list maxitems:1)
        /// </summary>
        [Input("kubeproxy")]
        public Input<ClusterServicesKubeproxyGetArgs>? Kubeproxy { get; set; }

        /// <summary>
        /// Scheduler options for RKE services (list maxitems:1)
        /// </summary>
        [Input("scheduler")]
        public Input<ClusterServicesSchedulerGetArgs>? Scheduler { get; set; }

        public ClusterServicesGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) Default: `false` (bool)
        /// </summary>
        [Input("alwaysPullImages")]
        public Input<bool>? AlwaysPullImages { get; set; }

        /// <summary>
        /// K8s audit log configuration. (list maxitem: 1)
        /// </summary>
        [Input("auditLog")]
        public Input<ClusterServicesKubeApiAuditLogArgs>? AuditLog { get; set; }

        /// <summary>
        /// K8s event rate limit configuration. (list maxitem: 1)
        /// </summary>
        [Input("eventRateLimit")]
        public Input<ClusterServicesKubeApiEventRateLimitArgs>? EventRateLimit { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Pod Security Policy option for kube API service. Default `false` (bool)
        /// </summary>
        [Input("podSecurityPolicy")]
        public Input<bool>? PodSecurityPolicy { get; set; }

        /// <summary>
        /// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
        /// </summary>
        [Input("secretsEncryptionConfig")]
        public Input<ClusterServicesKubeApiSecretsEncryptionConfigArgs>? SecretsEncryptionConfig { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        /// <summary>
        /// Service Node Port Range option for kube API service (string)
        /// </summary>
        [Input("serviceNodePortRange")]
        public Input<string>? ServiceNodePortRange { get; set; }

        public ClusterServicesKubeApiArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiAuditLogArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log configuration. (list maxtiem: 1)
        /// </summary>
        [Input("configuration")]
        public Input<ClusterServicesKubeApiAuditLogConfigurationArgs>? Configuration { get; set; }

        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiAuditLogArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiAuditLogConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log format. Default: `json` (string)
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        [Input("maxAge")]
        public Input<int>? MaxAge { get; set; }

        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        [Input("maxBackup")]
        public Input<int>? MaxBackup { get; set; }

        /// <summary>
        /// Audit log max size. Default: `100` (int)
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public ClusterServicesKubeApiAuditLogConfigurationArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiAuditLogConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log format. Default: `json` (string)
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        [Input("maxAge")]
        public Input<int>? MaxAge { get; set; }

        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        [Input("maxBackup")]
        public Input<int>? MaxBackup { get; set; }

        /// <summary>
        /// Audit log max size. Default: `100` (int)
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public ClusterServicesKubeApiAuditLogConfigurationGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiAuditLogGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log configuration. (list maxtiem: 1)
        /// </summary>
        [Input("configuration")]
        public Input<ClusterServicesKubeApiAuditLogConfigurationGetArgs>? Configuration { get; set; }

        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiAuditLogGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) Default: `false` (bool)
        /// </summary>
        [Input("alwaysPullImages")]
        public Input<bool>? AlwaysPullImages { get; set; }

        /// <summary>
        /// K8s audit log configuration. (list maxitem: 1)
        /// </summary>
        [Input("auditLog")]
        public Input<ClusterServicesKubeApiDeprecatedAuditLogArgs>? AuditLog { get; set; }

        /// <summary>
        /// K8s event rate limit configuration. (list maxitem: 1)
        /// </summary>
        [Input("eventRateLimit")]
        public Input<ClusterServicesKubeApiDeprecatedEventRateLimitArgs>? EventRateLimit { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Pod Security Policy option for kube API service. Default `false` (bool)
        /// </summary>
        [Input("podSecurityPolicy")]
        public Input<bool>? PodSecurityPolicy { get; set; }

        /// <summary>
        /// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
        /// </summary>
        [Input("secretsEncryptionConfig")]
        public Input<ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs>? SecretsEncryptionConfig { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        /// <summary>
        /// Service Node Port Range option for kube API service (string)
        /// </summary>
        [Input("serviceNodePortRange")]
        public Input<string>? ServiceNodePortRange { get; set; }

        public ClusterServicesKubeApiDeprecatedArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedAuditLogArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log configuration. (list maxtiem: 1)
        /// </summary>
        [Input("configuration")]
        public Input<ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs>? Configuration { get; set; }

        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiDeprecatedAuditLogArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log format. Default: `json` (string)
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        [Input("maxAge")]
        public Input<int>? MaxAge { get; set; }

        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        [Input("maxBackup")]
        public Input<int>? MaxBackup { get; set; }

        /// <summary>
        /// Audit log max size. Default: `100` (int)
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedAuditLogConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log format. Default: `json` (string)
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        [Input("maxAge")]
        public Input<int>? MaxAge { get; set; }

        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        [Input("maxBackup")]
        public Input<int>? MaxBackup { get; set; }

        /// <summary>
        /// Audit log max size. Default: `100` (int)
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public ClusterServicesKubeApiDeprecatedAuditLogConfigurationGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedAuditLogGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audit log configuration. (list maxtiem: 1)
        /// </summary>
        [Input("configuration")]
        public Input<ClusterServicesKubeApiDeprecatedAuditLogConfigurationGetArgs>? Configuration { get; set; }

        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiDeprecatedAuditLogGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedEventRateLimitArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiDeprecatedEventRateLimitArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedEventRateLimitGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiDeprecatedEventRateLimitGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) Default: `false` (bool)
        /// </summary>
        [Input("alwaysPullImages")]
        public Input<bool>? AlwaysPullImages { get; set; }

        /// <summary>
        /// K8s audit log configuration. (list maxitem: 1)
        /// </summary>
        [Input("auditLog")]
        public Input<ClusterServicesKubeApiDeprecatedAuditLogGetArgs>? AuditLog { get; set; }

        /// <summary>
        /// K8s event rate limit configuration. (list maxitem: 1)
        /// </summary>
        [Input("eventRateLimit")]
        public Input<ClusterServicesKubeApiDeprecatedEventRateLimitGetArgs>? EventRateLimit { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Pod Security Policy option for kube API service. Default `false` (bool)
        /// </summary>
        [Input("podSecurityPolicy")]
        public Input<bool>? PodSecurityPolicy { get; set; }

        /// <summary>
        /// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
        /// </summary>
        [Input("secretsEncryptionConfig")]
        public Input<ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigGetArgs>? SecretsEncryptionConfig { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        /// <summary>
        /// Service Node Port Range option for kube API service (string)
        /// </summary>
        [Input("serviceNodePortRange")]
        public Input<string>? ServiceNodePortRange { get; set; }

        public ClusterServicesKubeApiDeprecatedGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiEventRateLimitArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiEventRateLimitArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiEventRateLimitGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiEventRateLimitGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) Default: `false` (bool)
        /// </summary>
        [Input("alwaysPullImages")]
        public Input<bool>? AlwaysPullImages { get; set; }

        /// <summary>
        /// K8s audit log configuration. (list maxitem: 1)
        /// </summary>
        [Input("auditLog")]
        public Input<ClusterServicesKubeApiAuditLogGetArgs>? AuditLog { get; set; }

        /// <summary>
        /// K8s event rate limit configuration. (list maxitem: 1)
        /// </summary>
        [Input("eventRateLimit")]
        public Input<ClusterServicesKubeApiEventRateLimitGetArgs>? EventRateLimit { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Pod Security Policy option for kube API service. Default `false` (bool)
        /// </summary>
        [Input("podSecurityPolicy")]
        public Input<bool>? PodSecurityPolicy { get; set; }

        /// <summary>
        /// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
        /// </summary>
        [Input("secretsEncryptionConfig")]
        public Input<ClusterServicesKubeApiSecretsEncryptionConfigGetArgs>? SecretsEncryptionConfig { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        /// <summary>
        /// Service Node Port Range option for kube API service (string)
        /// </summary>
        [Input("serviceNodePortRange")]
        public Input<string>? ServiceNodePortRange { get; set; }

        public ClusterServicesKubeApiGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiSecretsEncryptionConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiSecretsEncryptionConfigArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeApiSecretsEncryptionConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ClusterServicesKubeApiSecretsEncryptionConfigGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeControllerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        [Input("clusterCidr")]
        public Input<string>? ClusterCidr { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        public ClusterServicesKubeControllerArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeControllerDeprecatedArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        [Input("clusterCidr")]
        public Input<string>? ClusterCidr { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        public ClusterServicesKubeControllerDeprecatedArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeControllerDeprecatedGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        [Input("clusterCidr")]
        public Input<string>? ClusterCidr { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        public ClusterServicesKubeControllerDeprecatedGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeControllerGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        [Input("clusterCidr")]
        public Input<string>? ClusterCidr { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        [Input("serviceClusterIpRange")]
        public Input<string>? ServiceClusterIpRange { get; set; }

        public ClusterServicesKubeControllerGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeProxyDeprecatedArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesKubeProxyDeprecatedArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeProxyDeprecatedGetArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesKubeProxyDeprecatedGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeSchedulerDeprecatedArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesKubeSchedulerDeprecatedArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeSchedulerDeprecatedGetArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesKubeSchedulerDeprecatedGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeletArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        [Input("clusterDnsServer")]
        public Input<string>? ClusterDnsServer { get; set; }

        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        [Input("clusterDomain")]
        public Input<string>? ClusterDomain { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Enable or disable failing when swap on is not supported (bool)
        /// * `generate_serving_certificate` [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
        /// </summary>
        [Input("failSwapOn")]
        public Input<bool>? FailSwapOn { get; set; }

        [Input("generateServingCertificate")]
        public Input<bool>? GenerateServingCertificate { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Infra container image for kubelet service (string)
        /// </summary>
        [Input("infraContainerImage")]
        public Input<string>? InfraContainerImage { get; set; }

        public ClusterServicesKubeletArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeletDeprecatedArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        [Input("clusterDnsServer")]
        public Input<string>? ClusterDnsServer { get; set; }

        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        [Input("clusterDomain")]
        public Input<string>? ClusterDomain { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Enable or disable failing when swap on is not supported (bool)
        /// * `generate_serving_certificate` [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
        /// </summary>
        [Input("failSwapOn")]
        public Input<bool>? FailSwapOn { get; set; }

        [Input("generateServingCertificate")]
        public Input<bool>? GenerateServingCertificate { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Infra container image for kubelet service (string)
        /// </summary>
        [Input("infraContainerImage")]
        public Input<string>? InfraContainerImage { get; set; }

        public ClusterServicesKubeletDeprecatedArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeletDeprecatedGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        [Input("clusterDnsServer")]
        public Input<string>? ClusterDnsServer { get; set; }

        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        [Input("clusterDomain")]
        public Input<string>? ClusterDomain { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Enable or disable failing when swap on is not supported (bool)
        /// * `generate_serving_certificate` [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
        /// </summary>
        [Input("failSwapOn")]
        public Input<bool>? FailSwapOn { get; set; }

        [Input("generateServingCertificate")]
        public Input<bool>? GenerateServingCertificate { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Infra container image for kubelet service (string)
        /// </summary>
        [Input("infraContainerImage")]
        public Input<string>? InfraContainerImage { get; set; }

        public ClusterServicesKubeletDeprecatedGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeletGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        [Input("clusterDnsServer")]
        public Input<string>? ClusterDnsServer { get; set; }

        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        [Input("clusterDomain")]
        public Input<string>? ClusterDomain { get; set; }

        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Enable or disable failing when swap on is not supported (bool)
        /// * `generate_serving_certificate` [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
        /// </summary>
        [Input("failSwapOn")]
        public Input<bool>? FailSwapOn { get; set; }

        [Input("generateServingCertificate")]
        public Input<bool>? GenerateServingCertificate { get; set; }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Infra container image for kubelet service (string)
        /// </summary>
        [Input("infraContainerImage")]
        public Input<string>? InfraContainerImage { get; set; }

        public ClusterServicesKubeletGetArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeproxyArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesKubeproxyArgs()
        {
        }
    }

    public sealed class ClusterServicesKubeproxyGetArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesKubeproxyGetArgs()
        {
        }
    }

    public sealed class ClusterServicesSchedulerArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesSchedulerArgs()
        {
        }
    }

    public sealed class ClusterServicesSchedulerGetArgs : Pulumi.ResourceArgs
    {
        [Input("extraArgs")]
        private InputMap<object>? _extraArgs;

        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public InputMap<object> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputMap<object>());
            set => _extraArgs = value;
        }

        [Input("extraBinds")]
        private InputList<string>? _extraBinds;

        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraBinds
        {
            get => _extraBinds ?? (_extraBinds = new InputList<string>());
            set => _extraBinds = value;
        }

        [Input("extraEnvs")]
        private InputList<string>? _extraEnvs;

        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public InputList<string> ExtraEnvs
        {
            get => _extraEnvs ?? (_extraEnvs = new InputList<string>());
            set => _extraEnvs = value;
        }

        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public ClusterServicesSchedulerGetArgs()
        {
        }
    }

    public sealed class ClusterSystemImagesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Docker image for alpine (string)
        /// </summary>
        [Input("alpine")]
        public Input<string>? Alpine { get; set; }

        /// <summary>
        /// Docker image for calico_cni (string)
        /// </summary>
        [Input("calicoCni")]
        public Input<string>? CalicoCni { get; set; }

        /// <summary>
        /// Docker image for calico_controllers (string)
        /// </summary>
        [Input("calicoControllers")]
        public Input<string>? CalicoControllers { get; set; }

        /// <summary>
        /// Docker image for calico_ctl (string)
        /// </summary>
        [Input("calicoCtl")]
        public Input<string>? CalicoCtl { get; set; }

        /// <summary>
        /// Docker image for calico_flex_vol (string)
        /// </summary>
        [Input("calicoFlexVol")]
        public Input<string>? CalicoFlexVol { get; set; }

        /// <summary>
        /// Docker image for calico_node (string)
        /// </summary>
        [Input("calicoNode")]
        public Input<string>? CalicoNode { get; set; }

        /// <summary>
        /// Docker image for canal_cni (string)
        /// </summary>
        [Input("canalCni")]
        public Input<string>? CanalCni { get; set; }

        /// <summary>
        /// Docker image for canal_flannel (string)
        /// </summary>
        [Input("canalFlannel")]
        public Input<string>? CanalFlannel { get; set; }

        /// <summary>
        /// Docker image for canal_flex_vol (string)
        /// </summary>
        [Input("canalFlexVol")]
        public Input<string>? CanalFlexVol { get; set; }

        /// <summary>
        /// Docker image for canal_node (string)
        /// </summary>
        [Input("canalNode")]
        public Input<string>? CanalNode { get; set; }

        /// <summary>
        /// Docker image for cert_downloader (string)
        /// </summary>
        [Input("certDownloader")]
        public Input<string>? CertDownloader { get; set; }

        /// <summary>
        /// Docker image for coredns (string)
        /// </summary>
        [Input("coredns")]
        public Input<string>? Coredns { get; set; }

        /// <summary>
        /// Docker image for coredns_autoscaler (string)
        /// </summary>
        [Input("corednsAutoscaler")]
        public Input<string>? CorednsAutoscaler { get; set; }

        /// <summary>
        /// Docker image for dnsmasq (string)
        /// </summary>
        [Input("dnsmasq")]
        public Input<string>? Dnsmasq { get; set; }

        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        [Input("etcd")]
        public Input<string>? Etcd { get; set; }

        /// <summary>
        /// Docker image for flannel (string)
        /// </summary>
        [Input("flannel")]
        public Input<string>? Flannel { get; set; }

        /// <summary>
        /// Docker image for flannel_cni (string)
        /// </summary>
        [Input("flannelCni")]
        public Input<string>? FlannelCni { get; set; }

        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        [Input("ingress")]
        public Input<string>? Ingress { get; set; }

        /// <summary>
        /// Docker image for ingress_backend (string)
        /// </summary>
        [Input("ingressBackend")]
        public Input<string>? IngressBackend { get; set; }

        /// <summary>
        /// Docker image for kube_dns (string)
        /// </summary>
        [Input("kubeDns")]
        public Input<string>? KubeDns { get; set; }

        /// <summary>
        /// Docker image for kube_dns_autoscaler (string)
        /// </summary>
        [Input("kubeDnsAutoscaler")]
        public Input<string>? KubeDnsAutoscaler { get; set; }

        /// <summary>
        /// Docker image for kube_dns_sidecar (string)
        /// </summary>
        [Input("kubeDnsSidecar")]
        public Input<string>? KubeDnsSidecar { get; set; }

        /// <summary>
        /// Docker image for kubernetes (string)
        /// </summary>
        [Input("kubernetes")]
        public Input<string>? Kubernetes { get; set; }

        /// <summary>
        /// Docker image for kubernetes_services_sidecar (string)
        /// </summary>
        [Input("kubernetesServicesSidecar")]
        public Input<string>? KubernetesServicesSidecar { get; set; }

        /// <summary>
        /// Docker image for metrics_server (string)
        /// </summary>
        [Input("metricsServer")]
        public Input<string>? MetricsServer { get; set; }

        /// <summary>
        /// Docker image for nginx_proxy (string)
        /// </summary>
        [Input("nginxProxy")]
        public Input<string>? NginxProxy { get; set; }

        /// <summary>
        /// Docker image for nodelocal (string)
        /// </summary>
        [Input("nodelocal")]
        public Input<string>? Nodelocal { get; set; }

        /// <summary>
        /// Docker image for pod_infra_container (string)
        /// </summary>
        [Input("podInfraContainer")]
        public Input<string>? PodInfraContainer { get; set; }

        /// <summary>
        /// Docker image for weave_cni (string)
        /// </summary>
        [Input("weaveCni")]
        public Input<string>? WeaveCni { get; set; }

        /// <summary>
        /// Docker image for weave_node (string)
        /// </summary>
        [Input("weaveNode")]
        public Input<string>? WeaveNode { get; set; }

        /// <summary>
        /// Docker image for windows_pod_infra_container (string)
        /// </summary>
        [Input("windowsPodInfraContainer")]
        public Input<string>? WindowsPodInfraContainer { get; set; }

        public ClusterSystemImagesArgs()
        {
        }
    }

    public sealed class ClusterSystemImagesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Docker image for alpine (string)
        /// </summary>
        [Input("alpine")]
        public Input<string>? Alpine { get; set; }

        /// <summary>
        /// Docker image for calico_cni (string)
        /// </summary>
        [Input("calicoCni")]
        public Input<string>? CalicoCni { get; set; }

        /// <summary>
        /// Docker image for calico_controllers (string)
        /// </summary>
        [Input("calicoControllers")]
        public Input<string>? CalicoControllers { get; set; }

        /// <summary>
        /// Docker image for calico_ctl (string)
        /// </summary>
        [Input("calicoCtl")]
        public Input<string>? CalicoCtl { get; set; }

        /// <summary>
        /// Docker image for calico_flex_vol (string)
        /// </summary>
        [Input("calicoFlexVol")]
        public Input<string>? CalicoFlexVol { get; set; }

        /// <summary>
        /// Docker image for calico_node (string)
        /// </summary>
        [Input("calicoNode")]
        public Input<string>? CalicoNode { get; set; }

        /// <summary>
        /// Docker image for canal_cni (string)
        /// </summary>
        [Input("canalCni")]
        public Input<string>? CanalCni { get; set; }

        /// <summary>
        /// Docker image for canal_flannel (string)
        /// </summary>
        [Input("canalFlannel")]
        public Input<string>? CanalFlannel { get; set; }

        /// <summary>
        /// Docker image for canal_flex_vol (string)
        /// </summary>
        [Input("canalFlexVol")]
        public Input<string>? CanalFlexVol { get; set; }

        /// <summary>
        /// Docker image for canal_node (string)
        /// </summary>
        [Input("canalNode")]
        public Input<string>? CanalNode { get; set; }

        /// <summary>
        /// Docker image for cert_downloader (string)
        /// </summary>
        [Input("certDownloader")]
        public Input<string>? CertDownloader { get; set; }

        /// <summary>
        /// Docker image for coredns (string)
        /// </summary>
        [Input("coredns")]
        public Input<string>? Coredns { get; set; }

        /// <summary>
        /// Docker image for coredns_autoscaler (string)
        /// </summary>
        [Input("corednsAutoscaler")]
        public Input<string>? CorednsAutoscaler { get; set; }

        /// <summary>
        /// Docker image for dnsmasq (string)
        /// </summary>
        [Input("dnsmasq")]
        public Input<string>? Dnsmasq { get; set; }

        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        [Input("etcd")]
        public Input<string>? Etcd { get; set; }

        /// <summary>
        /// Docker image for flannel (string)
        /// </summary>
        [Input("flannel")]
        public Input<string>? Flannel { get; set; }

        /// <summary>
        /// Docker image for flannel_cni (string)
        /// </summary>
        [Input("flannelCni")]
        public Input<string>? FlannelCni { get; set; }

        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        [Input("ingress")]
        public Input<string>? Ingress { get; set; }

        /// <summary>
        /// Docker image for ingress_backend (string)
        /// </summary>
        [Input("ingressBackend")]
        public Input<string>? IngressBackend { get; set; }

        /// <summary>
        /// Docker image for kube_dns (string)
        /// </summary>
        [Input("kubeDns")]
        public Input<string>? KubeDns { get; set; }

        /// <summary>
        /// Docker image for kube_dns_autoscaler (string)
        /// </summary>
        [Input("kubeDnsAutoscaler")]
        public Input<string>? KubeDnsAutoscaler { get; set; }

        /// <summary>
        /// Docker image for kube_dns_sidecar (string)
        /// </summary>
        [Input("kubeDnsSidecar")]
        public Input<string>? KubeDnsSidecar { get; set; }

        /// <summary>
        /// Docker image for kubernetes (string)
        /// </summary>
        [Input("kubernetes")]
        public Input<string>? Kubernetes { get; set; }

        /// <summary>
        /// Docker image for kubernetes_services_sidecar (string)
        /// </summary>
        [Input("kubernetesServicesSidecar")]
        public Input<string>? KubernetesServicesSidecar { get; set; }

        /// <summary>
        /// Docker image for metrics_server (string)
        /// </summary>
        [Input("metricsServer")]
        public Input<string>? MetricsServer { get; set; }

        /// <summary>
        /// Docker image for nginx_proxy (string)
        /// </summary>
        [Input("nginxProxy")]
        public Input<string>? NginxProxy { get; set; }

        /// <summary>
        /// Docker image for nodelocal (string)
        /// </summary>
        [Input("nodelocal")]
        public Input<string>? Nodelocal { get; set; }

        /// <summary>
        /// Docker image for pod_infra_container (string)
        /// </summary>
        [Input("podInfraContainer")]
        public Input<string>? PodInfraContainer { get; set; }

        /// <summary>
        /// Docker image for weave_cni (string)
        /// </summary>
        [Input("weaveCni")]
        public Input<string>? WeaveCni { get; set; }

        /// <summary>
        /// Docker image for weave_node (string)
        /// </summary>
        [Input("weaveNode")]
        public Input<string>? WeaveNode { get; set; }

        /// <summary>
        /// Docker image for windows_pod_infra_container (string)
        /// </summary>
        [Input("windowsPodInfraContainer")]
        public Input<string>? WindowsPodInfraContainer { get; set; }

        public ClusterSystemImagesGetArgs()
        {
        }
    }

    public sealed class ClusterWorkerHostsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        public ClusterWorkerHostsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ClusterAuthentication
    {
        /// <summary>
        /// List of additional hostnames and IPs to include in the api server PKI cert (list)
        /// </summary>
        public readonly ImmutableArray<string> Sans;
        /// <summary>
        /// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
        /// </summary>
        public readonly string? Strategy;
        /// <summary>
        /// Webhook configuration options (list maxitem: 1)
        /// </summary>
        public readonly ClusterAuthenticationWebhook Webhook;

        [OutputConstructor]
        private ClusterAuthentication(
            ImmutableArray<string> sans,
            string? strategy,
            ClusterAuthenticationWebhook webhook)
        {
            Sans = sans;
            Strategy = strategy;
            Webhook = webhook;
        }
    }

    [OutputType]
    public sealed class ClusterAuthenticationWebhook
    {
        /// <summary>
        /// Controls how long to cache authentication decisions (string)
        /// </summary>
        public readonly string? CacheTimeout;
        /// <summary>
        /// Multiline string that represent a custom webhook config file (string)
        /// </summary>
        public readonly string? ConfigFile;

        [OutputConstructor]
        private ClusterAuthenticationWebhook(
            string? cacheTimeout,
            string? configFile)
        {
            CacheTimeout = cacheTimeout;
            ConfigFile = configFile;
        }
    }

    [OutputType]
    public sealed class ClusterAuthorization
    {
        /// <summary>
        /// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Options;

        [OutputConstructor]
        private ClusterAuthorization(
            string? mode,
            ImmutableDictionary<string, object>? options)
        {
            Mode = mode;
            Options = options;
        }
    }

    [OutputType]
    public sealed class ClusterBastionHost
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        public readonly bool? SshAgentAuth;
        /// <summary>
        /// SSH Certificate (string)
        /// </summary>
        public readonly string? SshCert;
        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        public readonly string SshCertPath;
        /// <summary>
        /// SSH Private Key (string)
        /// </summary>
        public readonly string? SshKey;
        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        public readonly string? SshKeyPath;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string User;

        [OutputConstructor]
        private ClusterBastionHost(
            string address,
            string? port,
            bool? sshAgentAuth,
            string? sshCert,
            string sshCertPath,
            string? sshKey,
            string? sshKeyPath,
            string user)
        {
            Address = address;
            Port = port;
            SshAgentAuth = sshAgentAuth;
            SshCert = sshCert;
            SshCertPath = sshCertPath;
            SshKey = sshKey;
            SshKeyPath = sshKeyPath;
            User = user;
        }
    }

    [OutputType]
    public sealed class ClusterCertificates
    {
        public readonly string Certificate;
        public readonly string CommonName;
        public readonly string Config;
        public readonly string ConfigEnvName;
        public readonly string ConfigPath;
        public readonly string EnvName;
        /// <summary>
        /// (Computed) The ID of the resource (string)
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public readonly string Key;
        public readonly string KeyEnvName;
        public readonly string KeyPath;
        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        public readonly string Name;
        public readonly string OuName;
        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        public readonly string Path;

        [OutputConstructor]
        private ClusterCertificates(
            string certificate,
            string commonName,
            string config,
            string configEnvName,
            string configPath,
            string envName,
            string id,
            string key,
            string keyEnvName,
            string keyPath,
            string name,
            string ouName,
            string path)
        {
            Certificate = certificate;
            CommonName = commonName;
            Config = config;
            ConfigEnvName = configEnvName;
            ConfigPath = configPath;
            EnvName = envName;
            Id = id;
            Key = key;
            KeyEnvName = keyEnvName;
            KeyPath = keyPath;
            Name = name;
            OuName = ouName;
            Path = path;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProvider
    {
        /// <summary>
        /// Use aws_cloud_provider instead
        /// </summary>
        public readonly ClusterCloudProviderAwsCloudConfig? AwsCloudConfig;
        /// <summary>
        /// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderAwsCloudProvider? AwsCloudProvider;
        /// <summary>
        /// Use azure_cloud_provider instead
        /// </summary>
        public readonly ClusterCloudProviderAzureCloudConfig? AzureCloudConfig;
        /// <summary>
        /// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderAzureCloudProvider? AzureCloudProvider;
        /// <summary>
        /// Use custom_cloud_provider instead
        /// </summary>
        public readonly string? CustomCloudConfig;
        /// <summary>
        /// Custom Cloud Provider config (string)
        /// </summary>
        public readonly string? CustomCloudProvider;
        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Use openstack_cloud_provider instead
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudConfig? OpenstackCloudConfig;
        /// <summary>
        /// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudProvider? OpenstackCloudProvider;
        /// <summary>
        /// Use vsphere_cloud_provider instead
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudConfig? VsphereCloudConfig;
        /// <summary>
        /// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtual_center` configuration. (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudProvider? VsphereCloudProvider;

        [OutputConstructor]
        private ClusterCloudProvider(
            ClusterCloudProviderAwsCloudConfig? awsCloudConfig,
            ClusterCloudProviderAwsCloudProvider? awsCloudProvider,
            ClusterCloudProviderAzureCloudConfig? azureCloudConfig,
            ClusterCloudProviderAzureCloudProvider? azureCloudProvider,
            string? customCloudConfig,
            string? customCloudProvider,
            string name,
            ClusterCloudProviderOpenstackCloudConfig? openstackCloudConfig,
            ClusterCloudProviderOpenstackCloudProvider? openstackCloudProvider,
            ClusterCloudProviderVsphereCloudConfig? vsphereCloudConfig,
            ClusterCloudProviderVsphereCloudProvider? vsphereCloudProvider)
        {
            AwsCloudConfig = awsCloudConfig;
            AwsCloudProvider = awsCloudProvider;
            AzureCloudConfig = azureCloudConfig;
            AzureCloudProvider = azureCloudProvider;
            CustomCloudConfig = customCloudConfig;
            CustomCloudProvider = customCloudProvider;
            Name = name;
            OpenstackCloudConfig = openstackCloudConfig;
            OpenstackCloudProvider = openstackCloudProvider;
            VsphereCloudConfig = vsphereCloudConfig;
            VsphereCloudProvider = vsphereCloudProvider;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAwsCloudConfig
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderAwsCloudConfigGlobal? Global;
        /// <summary>
        /// (list)
        /// </summary>
        public readonly ImmutableArray<ClusterCloudProviderAwsCloudConfigServiceOverrides> ServiceOverrides;

        [OutputConstructor]
        private ClusterCloudProviderAwsCloudConfig(
            ClusterCloudProviderAwsCloudConfigGlobal? global,
            ImmutableArray<ClusterCloudProviderAwsCloudConfigServiceOverrides> serviceOverrides)
        {
            Global = global;
            ServiceOverrides = serviceOverrides;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAwsCloudConfigGlobal
    {
        /// <summary>
        /// Disables the automatic ingress creation. Default `false` (bool)
        /// </summary>
        public readonly bool? DisableSecurityGroupIngress;
        /// <summary>
        /// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
        /// </summary>
        public readonly bool? DisableStrictZoneCheck;
        /// <summary>
        /// Use these ELB security groups instead create new (string)
        /// </summary>
        public readonly string? ElbSecurityGroup;
        /// <summary>
        /// The cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        public readonly string? KubernetesClusterId;
        /// <summary>
        /// Legacy cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        public readonly string? KubernetesClusterTag;
        /// <summary>
        /// IAM role to assume when interaction with AWS APIs (string)
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Enables using a specific RouteTable (string)
        /// </summary>
        public readonly string? RouteTableId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
        /// </summary>
        public readonly string? Vpc;
        /// <summary>
        /// The AWS zone (string)
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private ClusterCloudProviderAwsCloudConfigGlobal(
            bool? disableSecurityGroupIngress,
            bool? disableStrictZoneCheck,
            string? elbSecurityGroup,
            string? kubernetesClusterId,
            string? kubernetesClusterTag,
            string? roleArn,
            string? routeTableId,
            string? subnetId,
            string? vpc,
            string? zone)
        {
            DisableSecurityGroupIngress = disableSecurityGroupIngress;
            DisableStrictZoneCheck = disableStrictZoneCheck;
            ElbSecurityGroup = elbSecurityGroup;
            KubernetesClusterId = kubernetesClusterId;
            KubernetesClusterTag = kubernetesClusterTag;
            RoleArn = roleArn;
            RouteTableId = routeTableId;
            SubnetId = subnetId;
            Vpc = vpc;
            Zone = zone;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAwsCloudConfigServiceOverrides
    {
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string SigningMethod;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SigningName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SigningRegion;
        /// <summary>
        /// Registry URL (string)
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private ClusterCloudProviderAwsCloudConfigServiceOverrides(
            string? key,
            string? region,
            string service,
            string signingMethod,
            string? signingName,
            string? signingRegion,
            string? url)
        {
            Key = key;
            Region = region;
            Service = service;
            SigningMethod = signingMethod;
            SigningName = signingName;
            SigningRegion = signingRegion;
            Url = url;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAwsCloudProvider
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderAwsCloudProviderGlobal? Global;
        /// <summary>
        /// (list)
        /// </summary>
        public readonly ImmutableArray<ClusterCloudProviderAwsCloudProviderServiceOverrides> ServiceOverrides;

        [OutputConstructor]
        private ClusterCloudProviderAwsCloudProvider(
            ClusterCloudProviderAwsCloudProviderGlobal? global,
            ImmutableArray<ClusterCloudProviderAwsCloudProviderServiceOverrides> serviceOverrides)
        {
            Global = global;
            ServiceOverrides = serviceOverrides;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAwsCloudProviderGlobal
    {
        /// <summary>
        /// Disables the automatic ingress creation. Default `false` (bool)
        /// </summary>
        public readonly bool? DisableSecurityGroupIngress;
        /// <summary>
        /// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
        /// </summary>
        public readonly bool? DisableStrictZoneCheck;
        /// <summary>
        /// Use these ELB security groups instead create new (string)
        /// </summary>
        public readonly string? ElbSecurityGroup;
        /// <summary>
        /// The cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        public readonly string? KubernetesClusterId;
        /// <summary>
        /// Legacy cluster id we'll use to identify our cluster resources (string)
        /// </summary>
        public readonly string? KubernetesClusterTag;
        /// <summary>
        /// IAM role to assume when interaction with AWS APIs (string)
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// Enables using a specific RouteTable (string)
        /// </summary>
        public readonly string? RouteTableId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
        /// </summary>
        public readonly string? Vpc;
        /// <summary>
        /// The AWS zone (string)
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private ClusterCloudProviderAwsCloudProviderGlobal(
            bool? disableSecurityGroupIngress,
            bool? disableStrictZoneCheck,
            string? elbSecurityGroup,
            string? kubernetesClusterId,
            string? kubernetesClusterTag,
            string? roleArn,
            string? routeTableId,
            string? subnetId,
            string? vpc,
            string? zone)
        {
            DisableSecurityGroupIngress = disableSecurityGroupIngress;
            DisableStrictZoneCheck = disableStrictZoneCheck;
            ElbSecurityGroup = elbSecurityGroup;
            KubernetesClusterId = kubernetesClusterId;
            KubernetesClusterTag = kubernetesClusterTag;
            RoleArn = roleArn;
            RouteTableId = routeTableId;
            SubnetId = subnetId;
            Vpc = vpc;
            Zone = zone;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAwsCloudProviderServiceOverrides
    {
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string SigningMethod;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SigningName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SigningRegion;
        /// <summary>
        /// Registry URL (string)
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private ClusterCloudProviderAwsCloudProviderServiceOverrides(
            string? key,
            string? region,
            string service,
            string signingMethod,
            string? signingName,
            string? signingRegion,
            string? url)
        {
            Key = key;
            Region = region;
            Service = service;
            SigningMethod = signingMethod;
            SigningName = signingName;
            SigningRegion = signingRegion;
            Url = url;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAzureCloudConfig
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? AadClientCertPassword;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? AadClientCertPath;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string AadClientId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string AadClientSecret;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Cloud;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? CloudProviderBackoff;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffDuration;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffExponent;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffJitter;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffRetries;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? CloudProviderRateLimit;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int CloudProviderRateLimitBucket;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderRateLimitQps;
        public readonly string? LoadBalancerSku;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? MaximumLoadBalancerRuleCount;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? PrimaryAvailabilitySetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? PrimaryScaleSetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? RouteTableName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SecurityGroupName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? UseInstanceMetadata;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? UseManagedIdentityExtension;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VmType;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VnetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VnetResourceGroup;

        [OutputConstructor]
        private ClusterCloudProviderAzureCloudConfig(
            string? aadClientCertPassword,
            string? aadClientCertPath,
            string aadClientId,
            string aadClientSecret,
            string? cloud,
            bool? cloudProviderBackoff,
            int? cloudProviderBackoffDuration,
            int? cloudProviderBackoffExponent,
            int? cloudProviderBackoffJitter,
            int? cloudProviderBackoffRetries,
            bool? cloudProviderRateLimit,
            int cloudProviderRateLimitBucket,
            int? cloudProviderRateLimitQps,
            string? loadBalancerSku,
            string? location,
            int? maximumLoadBalancerRuleCount,
            string? primaryAvailabilitySetName,
            string? primaryScaleSetName,
            string? resourceGroup,
            string? routeTableName,
            string? securityGroupName,
            string? subnetName,
            string subscriptionId,
            string tenantId,
            bool? useInstanceMetadata,
            bool? useManagedIdentityExtension,
            string? vmType,
            string? vnetName,
            string? vnetResourceGroup)
        {
            AadClientCertPassword = aadClientCertPassword;
            AadClientCertPath = aadClientCertPath;
            AadClientId = aadClientId;
            AadClientSecret = aadClientSecret;
            Cloud = cloud;
            CloudProviderBackoff = cloudProviderBackoff;
            CloudProviderBackoffDuration = cloudProviderBackoffDuration;
            CloudProviderBackoffExponent = cloudProviderBackoffExponent;
            CloudProviderBackoffJitter = cloudProviderBackoffJitter;
            CloudProviderBackoffRetries = cloudProviderBackoffRetries;
            CloudProviderRateLimit = cloudProviderRateLimit;
            CloudProviderRateLimitBucket = cloudProviderRateLimitBucket;
            CloudProviderRateLimitQps = cloudProviderRateLimitQps;
            LoadBalancerSku = loadBalancerSku;
            Location = location;
            MaximumLoadBalancerRuleCount = maximumLoadBalancerRuleCount;
            PrimaryAvailabilitySetName = primaryAvailabilitySetName;
            PrimaryScaleSetName = primaryScaleSetName;
            ResourceGroup = resourceGroup;
            RouteTableName = routeTableName;
            SecurityGroupName = securityGroupName;
            SubnetName = subnetName;
            SubscriptionId = subscriptionId;
            TenantId = tenantId;
            UseInstanceMetadata = useInstanceMetadata;
            UseManagedIdentityExtension = useManagedIdentityExtension;
            VmType = vmType;
            VnetName = vnetName;
            VnetResourceGroup = vnetResourceGroup;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderAzureCloudProvider
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? AadClientCertPassword;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? AadClientCertPath;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string AadClientId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string AadClientSecret;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Cloud;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? CloudProviderBackoff;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffDuration;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffExponent;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffJitter;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderBackoffRetries;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? CloudProviderRateLimit;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int CloudProviderRateLimitBucket;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? CloudProviderRateLimitQps;
        public readonly string? LoadBalancerSku;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? MaximumLoadBalancerRuleCount;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? PrimaryAvailabilitySetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? PrimaryScaleSetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ResourceGroup;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? RouteTableName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SecurityGroupName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? UseInstanceMetadata;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? UseManagedIdentityExtension;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VmType;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VnetName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VnetResourceGroup;

        [OutputConstructor]
        private ClusterCloudProviderAzureCloudProvider(
            string? aadClientCertPassword,
            string? aadClientCertPath,
            string aadClientId,
            string aadClientSecret,
            string? cloud,
            bool? cloudProviderBackoff,
            int? cloudProviderBackoffDuration,
            int? cloudProviderBackoffExponent,
            int? cloudProviderBackoffJitter,
            int? cloudProviderBackoffRetries,
            bool? cloudProviderRateLimit,
            int cloudProviderRateLimitBucket,
            int? cloudProviderRateLimitQps,
            string? loadBalancerSku,
            string? location,
            int? maximumLoadBalancerRuleCount,
            string? primaryAvailabilitySetName,
            string? primaryScaleSetName,
            string? resourceGroup,
            string? routeTableName,
            string? securityGroupName,
            string? subnetName,
            string subscriptionId,
            string tenantId,
            bool? useInstanceMetadata,
            bool? useManagedIdentityExtension,
            string? vmType,
            string? vnetName,
            string? vnetResourceGroup)
        {
            AadClientCertPassword = aadClientCertPassword;
            AadClientCertPath = aadClientCertPath;
            AadClientId = aadClientId;
            AadClientSecret = aadClientSecret;
            Cloud = cloud;
            CloudProviderBackoff = cloudProviderBackoff;
            CloudProviderBackoffDuration = cloudProviderBackoffDuration;
            CloudProviderBackoffExponent = cloudProviderBackoffExponent;
            CloudProviderBackoffJitter = cloudProviderBackoffJitter;
            CloudProviderBackoffRetries = cloudProviderBackoffRetries;
            CloudProviderRateLimit = cloudProviderRateLimit;
            CloudProviderRateLimitBucket = cloudProviderRateLimitBucket;
            CloudProviderRateLimitQps = cloudProviderRateLimitQps;
            LoadBalancerSku = loadBalancerSku;
            Location = location;
            MaximumLoadBalancerRuleCount = maximumLoadBalancerRuleCount;
            PrimaryAvailabilitySetName = primaryAvailabilitySetName;
            PrimaryScaleSetName = primaryScaleSetName;
            ResourceGroup = resourceGroup;
            RouteTableName = routeTableName;
            SecurityGroupName = securityGroupName;
            SubnetName = subnetName;
            SubscriptionId = subscriptionId;
            TenantId = tenantId;
            UseInstanceMetadata = useInstanceMetadata;
            UseManagedIdentityExtension = useManagedIdentityExtension;
            VmType = vmType;
            VnetName = vnetName;
            VnetResourceGroup = vnetResourceGroup;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudConfig
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudConfigBlockStorage? BlockStorage;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudConfigGlobal Global;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudConfigLoadBalancer? LoadBalancer;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudConfigMetadata? Metadata;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudConfigRoute? Route;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudConfig(
            ClusterCloudProviderOpenstackCloudConfigBlockStorage? blockStorage,
            ClusterCloudProviderOpenstackCloudConfigGlobal global,
            ClusterCloudProviderOpenstackCloudConfigLoadBalancer? loadBalancer,
            ClusterCloudProviderOpenstackCloudConfigMetadata? metadata,
            ClusterCloudProviderOpenstackCloudConfigRoute? route)
        {
            BlockStorage = blockStorage;
            Global = global;
            LoadBalancer = loadBalancer;
            Metadata = metadata;
            Route = route;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudConfigBlockStorage
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? BsVersion;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly bool? IgnoreVolumeAz;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly bool? TrustDevicePath;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudConfigBlockStorage(
            string? bsVersion,
            bool? ignoreVolumeAz,
            bool? trustDevicePath)
        {
            BsVersion = bsVersion;
            IgnoreVolumeAz = ignoreVolumeAz;
            TrustDevicePath = trustDevicePath;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudConfigGlobal
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string AuthUrl;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? CaFile;
        /// <summary>
        /// Required if `domain_name` not provided. (string)
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// Required if `domain_id` not provided. (string)
        /// </summary>
        public readonly string? DomainName;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Required if `tenant_id` not provided. (string)
        /// </summary>
        public readonly string? TenantName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? TrustId;
        /// <summary>
        /// Required if `username` not provided. (string)
        /// </summary>
        public readonly string? UserId;
        /// <summary>
        /// Required if `user_id` not provided. (string)
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudConfigGlobal(
            string authUrl,
            string? caFile,
            string? domainId,
            string? domainName,
            string password,
            string? region,
            string? tenantId,
            string? tenantName,
            string? trustId,
            string? userId,
            string? username)
        {
            AuthUrl = authUrl;
            CaFile = caFile;
            DomainId = domainId;
            DomainName = domainName;
            Password = password;
            Region = region;
            TenantId = tenantId;
            TenantName = tenantName;
            TrustId = trustId;
            UserId = userId;
            Username = username;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudConfigLoadBalancer
    {
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? CreateMonitor;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? FloatingNetworkId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? LbMethod;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? LbProvider;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? LbVersion;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? ManageSecurityGroups;
        /// <summary>
        /// Default `60s` (string)
        /// </summary>
        public readonly string? MonitorDelay;
        /// <summary>
        /// Default 5 (int)
        /// </summary>
        public readonly int? MonitorMaxRetries;
        /// <summary>
        /// Default `30s` (string)
        /// </summary>
        public readonly string? MonitorTimeout;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? UseOctavia;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudConfigLoadBalancer(
            bool? createMonitor,
            string? floatingNetworkId,
            string? lbMethod,
            string? lbProvider,
            string? lbVersion,
            bool? manageSecurityGroups,
            string? monitorDelay,
            int? monitorMaxRetries,
            string? monitorTimeout,
            string? subnetId,
            bool? useOctavia)
        {
            CreateMonitor = createMonitor;
            FloatingNetworkId = floatingNetworkId;
            LbMethod = lbMethod;
            LbProvider = lbProvider;
            LbVersion = lbVersion;
            ManageSecurityGroups = manageSecurityGroups;
            MonitorDelay = monitorDelay;
            MonitorMaxRetries = monitorMaxRetries;
            MonitorTimeout = monitorTimeout;
            SubnetId = subnetId;
            UseOctavia = useOctavia;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudConfigMetadata
    {
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? RequestTimeout;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SearchOrder;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudConfigMetadata(
            int? requestTimeout,
            string? searchOrder)
        {
            RequestTimeout = requestTimeout;
            SearchOrder = searchOrder;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudConfigRoute
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? RouterId;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudConfigRoute(string? routerId)
        {
            RouterId = routerId;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudProvider
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudProviderBlockStorage? BlockStorage;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudProviderGlobal Global;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudProviderLoadBalancer? LoadBalancer;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudProviderMetadata? Metadata;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderOpenstackCloudProviderRoute? Route;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudProvider(
            ClusterCloudProviderOpenstackCloudProviderBlockStorage? blockStorage,
            ClusterCloudProviderOpenstackCloudProviderGlobal global,
            ClusterCloudProviderOpenstackCloudProviderLoadBalancer? loadBalancer,
            ClusterCloudProviderOpenstackCloudProviderMetadata? metadata,
            ClusterCloudProviderOpenstackCloudProviderRoute? route)
        {
            BlockStorage = blockStorage;
            Global = global;
            LoadBalancer = loadBalancer;
            Metadata = metadata;
            Route = route;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudProviderBlockStorage
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? BsVersion;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly bool? IgnoreVolumeAz;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly bool? TrustDevicePath;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudProviderBlockStorage(
            string? bsVersion,
            bool? ignoreVolumeAz,
            bool? trustDevicePath)
        {
            BsVersion = bsVersion;
            IgnoreVolumeAz = ignoreVolumeAz;
            TrustDevicePath = trustDevicePath;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudProviderGlobal
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string AuthUrl;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? CaFile;
        /// <summary>
        /// Required if `domain_name` not provided. (string)
        /// </summary>
        public readonly string? DomainId;
        /// <summary>
        /// Required if `domain_id` not provided. (string)
        /// </summary>
        public readonly string? DomainName;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Required if `tenant_name` not provided. (string)
        /// </summary>
        public readonly string? TenantId;
        /// <summary>
        /// Required if `tenant_id` not provided. (string)
        /// </summary>
        public readonly string? TenantName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? TrustId;
        /// <summary>
        /// Required if `username` not provided. (string)
        /// </summary>
        public readonly string? UserId;
        /// <summary>
        /// Required if `user_id` not provided. (string)
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudProviderGlobal(
            string authUrl,
            string? caFile,
            string? domainId,
            string? domainName,
            string password,
            string? region,
            string? tenantId,
            string? tenantName,
            string? trustId,
            string? userId,
            string? username)
        {
            AuthUrl = authUrl;
            CaFile = caFile;
            DomainId = domainId;
            DomainName = domainName;
            Password = password;
            Region = region;
            TenantId = tenantId;
            TenantName = tenantName;
            TrustId = trustId;
            UserId = userId;
            Username = username;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudProviderLoadBalancer
    {
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? CreateMonitor;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? FloatingNetworkId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? LbMethod;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? LbProvider;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? LbVersion;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? ManageSecurityGroups;
        /// <summary>
        /// Default `60s` (string)
        /// </summary>
        public readonly string? MonitorDelay;
        /// <summary>
        /// Default 5 (int)
        /// </summary>
        public readonly int? MonitorMaxRetries;
        /// <summary>
        /// Default `30s` (string)
        /// </summary>
        public readonly string? MonitorTimeout;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? UseOctavia;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudProviderLoadBalancer(
            bool? createMonitor,
            string? floatingNetworkId,
            string? lbMethod,
            string? lbProvider,
            string? lbVersion,
            bool? manageSecurityGroups,
            string? monitorDelay,
            int? monitorMaxRetries,
            string? monitorTimeout,
            string? subnetId,
            bool? useOctavia)
        {
            CreateMonitor = createMonitor;
            FloatingNetworkId = floatingNetworkId;
            LbMethod = lbMethod;
            LbProvider = lbProvider;
            LbVersion = lbVersion;
            ManageSecurityGroups = manageSecurityGroups;
            MonitorDelay = monitorDelay;
            MonitorMaxRetries = monitorMaxRetries;
            MonitorTimeout = monitorTimeout;
            SubnetId = subnetId;
            UseOctavia = useOctavia;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudProviderMetadata
    {
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? RequestTimeout;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SearchOrder;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudProviderMetadata(
            int? requestTimeout,
            string? searchOrder)
        {
            RequestTimeout = requestTimeout;
            SearchOrder = searchOrder;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderOpenstackCloudProviderRoute
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? RouterId;

        [OutputConstructor]
        private ClusterCloudProviderOpenstackCloudProviderRoute(string? routerId)
        {
            RouterId = routerId;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudConfig
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudConfigDisk? Disk;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudConfigGlobal? Global;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudConfigNetwork? Network;
        /// <summary>
        /// (List)
        /// </summary>
        public readonly ImmutableArray<ClusterCloudProviderVsphereCloudConfigVirtualCenters> VirtualCenters;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudConfigWorkspace Workspace;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudConfig(
            ClusterCloudProviderVsphereCloudConfigDisk? disk,
            ClusterCloudProviderVsphereCloudConfigGlobal? global,
            ClusterCloudProviderVsphereCloudConfigNetwork? network,
            ImmutableArray<ClusterCloudProviderVsphereCloudConfigVirtualCenters> virtualCenters,
            ClusterCloudProviderVsphereCloudConfigWorkspace workspace)
        {
            Disk = disk;
            Global = global;
            Network = network;
            VirtualCenters = virtualCenters;
            Workspace = workspace;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudConfigDisk
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ScsiControllerType;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudConfigDisk(string? scsiControllerType)
        {
            ScsiControllerType = scsiControllerType;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudConfigGlobal
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Datacenter;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Datacenters;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Datastore;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? InsecureFlag;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? SoapRoundtripCount;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string? User;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VmName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VmUuid;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? WorkingDir;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudConfigGlobal(
            string? datacenter,
            string datacenters,
            string? datastore,
            bool? insecureFlag,
            string? password,
            string? port,
            int? soapRoundtripCount,
            string? user,
            string? vmName,
            string? vmUuid,
            string? workingDir)
        {
            Datacenter = datacenter;
            Datacenters = datacenters;
            Datastore = datastore;
            InsecureFlag = insecureFlag;
            Password = password;
            Port = port;
            SoapRoundtripCount = soapRoundtripCount;
            User = user;
            VmName = vmName;
            VmUuid = vmUuid;
            WorkingDir = workingDir;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudConfigNetwork
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? PublicNetwork;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudConfigNetwork(string? publicNetwork)
        {
            PublicNetwork = publicNetwork;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudConfigVirtualCenters
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Datacenters;
        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? SoapRoundtripCount;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string User;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudConfigVirtualCenters(
            string datacenters,
            string name,
            string password,
            string? port,
            int? soapRoundtripCount,
            string user)
        {
            Datacenters = datacenters;
            Name = name;
            Password = password;
            Port = port;
            SoapRoundtripCount = soapRoundtripCount;
            User = user;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudConfigWorkspace
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? DefaultDatastore;
        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        public readonly string? Folder;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ResourcepoolPath;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Server;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudConfigWorkspace(
            string datacenter,
            string? defaultDatastore,
            string? folder,
            string? resourcepoolPath,
            string server)
        {
            Datacenter = datacenter;
            DefaultDatastore = defaultDatastore;
            Folder = folder;
            ResourcepoolPath = resourcepoolPath;
            Server = server;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudProvider
    {
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudProviderDisk? Disk;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudProviderGlobal? Global;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudProviderNetwork? Network;
        /// <summary>
        /// (List)
        /// </summary>
        public readonly ImmutableArray<ClusterCloudProviderVsphereCloudProviderVirtualCenters> VirtualCenters;
        /// <summary>
        /// (list maxitems:1)
        /// </summary>
        public readonly ClusterCloudProviderVsphereCloudProviderWorkspace Workspace;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudProvider(
            ClusterCloudProviderVsphereCloudProviderDisk? disk,
            ClusterCloudProviderVsphereCloudProviderGlobal? global,
            ClusterCloudProviderVsphereCloudProviderNetwork? network,
            ImmutableArray<ClusterCloudProviderVsphereCloudProviderVirtualCenters> virtualCenters,
            ClusterCloudProviderVsphereCloudProviderWorkspace workspace)
        {
            Disk = disk;
            Global = global;
            Network = network;
            VirtualCenters = virtualCenters;
            Workspace = workspace;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudProviderDisk
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ScsiControllerType;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudProviderDisk(string? scsiControllerType)
        {
            ScsiControllerType = scsiControllerType;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudProviderGlobal
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Datacenter;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Datacenters;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Datastore;
        /// <summary>
        /// (bool)
        /// </summary>
        public readonly bool? InsecureFlag;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? SoapRoundtripCount;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string? User;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VmName;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? VmUuid;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? WorkingDir;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudProviderGlobal(
            string? datacenter,
            string datacenters,
            string? datastore,
            bool? insecureFlag,
            string? password,
            string? port,
            int? soapRoundtripCount,
            string? user,
            string? vmName,
            string? vmUuid,
            string? workingDir)
        {
            Datacenter = datacenter;
            Datacenters = datacenters;
            Datastore = datastore;
            InsecureFlag = insecureFlag;
            Password = password;
            Port = port;
            SoapRoundtripCount = soapRoundtripCount;
            User = user;
            VmName = vmName;
            VmUuid = vmUuid;
            WorkingDir = workingDir;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudProviderNetwork
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? PublicNetwork;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudProviderNetwork(string? publicNetwork)
        {
            PublicNetwork = publicNetwork;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudProviderVirtualCenters
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Datacenters;
        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// (int)
        /// </summary>
        public readonly int? SoapRoundtripCount;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string User;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudProviderVirtualCenters(
            string datacenters,
            string name,
            string password,
            string? port,
            int? soapRoundtripCount,
            string user)
        {
            Datacenters = datacenters;
            Name = name;
            Password = password;
            Port = port;
            SoapRoundtripCount = soapRoundtripCount;
            User = user;
        }
    }

    [OutputType]
    public sealed class ClusterCloudProviderVsphereCloudProviderWorkspace
    {
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? DefaultDatastore;
        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        public readonly string? Folder;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ResourcepoolPath;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string Server;

        [OutputConstructor]
        private ClusterCloudProviderVsphereCloudProviderWorkspace(
            string datacenter,
            string? defaultDatastore,
            string? folder,
            string? resourcepoolPath,
            string server)
        {
            Datacenter = datacenter;
            DefaultDatastore = defaultDatastore;
            Folder = folder;
            ResourcepoolPath = resourcepoolPath;
            Server = server;
        }
    }

    [OutputType]
    public sealed class ClusterControlPlaneHosts
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        public readonly string NodeName;

        [OutputConstructor]
        private ClusterControlPlaneHosts(
            string address,
            string nodeName)
        {
            Address = address;
            NodeName = nodeName;
        }
    }

    [OutputType]
    public sealed class ClusterDns
    {
        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? NodeSelector;
        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        public readonly string? Provider;
        /// <summary>
        /// Reverse CIDRs  (list)
        /// </summary>
        public readonly ImmutableArray<string> ReverseCidrs;
        /// <summary>
        /// Upstream nameservers  (list)
        /// </summary>
        public readonly ImmutableArray<string> UpstreamNameservers;

        [OutputConstructor]
        private ClusterDns(
            ImmutableDictionary<string, object>? nodeSelector,
            string? provider,
            ImmutableArray<string> reverseCidrs,
            ImmutableArray<string> upstreamNameservers)
        {
            NodeSelector = nodeSelector;
            Provider = provider;
            ReverseCidrs = reverseCidrs;
            UpstreamNameservers = upstreamNameservers;
        }
    }

    [OutputType]
    public sealed class ClusterEtcdHosts
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        public readonly string NodeName;

        [OutputConstructor]
        private ClusterEtcdHosts(
            string address,
            string nodeName)
        {
            Address = address;
            NodeName = nodeName;
        }
    }

    [OutputType]
    public sealed class ClusterInactiveHosts
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        public readonly string NodeName;

        [OutputConstructor]
        private ClusterInactiveHosts(
            string address,
            string nodeName)
        {
            Address = address;
            NodeName = nodeName;
        }
    }

    [OutputType]
    public sealed class ClusterIngress
    {
        /// <summary>
        /// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
        /// </summary>
        public readonly string? DnsPolicy;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ExtraArgs;
        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? NodeSelector;
        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Options;
        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        public readonly string? Provider;

        [OutputConstructor]
        private ClusterIngress(
            string? dnsPolicy,
            ImmutableDictionary<string, object>? extraArgs,
            ImmutableDictionary<string, object>? nodeSelector,
            ImmutableDictionary<string, object>? options,
            string? provider)
        {
            DnsPolicy = dnsPolicy;
            ExtraArgs = extraArgs;
            NodeSelector = nodeSelector;
            Options = options;
            Provider = provider;
        }
    }

    [OutputType]
    public sealed class ClusterMonitoring
    {
        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? NodeSelector;
        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Options;
        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        public readonly string Provider;

        [OutputConstructor]
        private ClusterMonitoring(
            ImmutableDictionary<string, object>? nodeSelector,
            ImmutableDictionary<string, object>? options,
            string provider)
        {
            NodeSelector = nodeSelector;
            Options = options;
            Provider = provider;
        }
    }

    [OutputType]
    public sealed class ClusterNetwork
    {
        /// <summary>
        /// Calico network provider config (list maxitems:1)
        /// </summary>
        public readonly ClusterNetworkCalicoNetworkProvider? CalicoNetworkProvider;
        /// <summary>
        /// Canal network provider config (list maxitems:1)
        /// </summary>
        public readonly ClusterNetworkCanalNetworkProvider? CanalNetworkProvider;
        /// <summary>
        /// Flannel network provider config (list maxitems:1)
        /// </summary>
        public readonly ClusterNetworkFlannelNetworkProvider? FlannelNetworkProvider;
        /// <summary>
        /// Network provider MTU. Default `0` (int)
        /// </summary>
        public readonly int? Mtu;
        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> Options;
        /// <summary>
        /// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
        /// </summary>
        public readonly string? Plugin;
        /// <summary>
        /// Weave network provider config (list maxitems:1)
        /// </summary>
        public readonly ClusterNetworkWeaveNetworkProvider? WeaveNetworkProvider;

        [OutputConstructor]
        private ClusterNetwork(
            ClusterNetworkCalicoNetworkProvider? calicoNetworkProvider,
            ClusterNetworkCanalNetworkProvider? canalNetworkProvider,
            ClusterNetworkFlannelNetworkProvider? flannelNetworkProvider,
            int? mtu,
            ImmutableDictionary<string, object> options,
            string? plugin,
            ClusterNetworkWeaveNetworkProvider? weaveNetworkProvider)
        {
            CalicoNetworkProvider = calicoNetworkProvider;
            CanalNetworkProvider = canalNetworkProvider;
            FlannelNetworkProvider = flannelNetworkProvider;
            Mtu = mtu;
            Options = options;
            Plugin = plugin;
            WeaveNetworkProvider = weaveNetworkProvider;
        }
    }

    [OutputType]
    public sealed class ClusterNetworkCalicoNetworkProvider
    {
        /// <summary>
        /// Calico cloud provider (string)
        /// </summary>
        public readonly string CloudProvider;

        [OutputConstructor]
        private ClusterNetworkCalicoNetworkProvider(string cloudProvider)
        {
            CloudProvider = cloudProvider;
        }
    }

    [OutputType]
    public sealed class ClusterNetworkCanalNetworkProvider
    {
        /// <summary>
        /// Flannel network interface (string)
        /// </summary>
        public readonly string Iface;

        [OutputConstructor]
        private ClusterNetworkCanalNetworkProvider(string iface)
        {
            Iface = iface;
        }
    }

    [OutputType]
    public sealed class ClusterNetworkFlannelNetworkProvider
    {
        /// <summary>
        /// Flannel network interface (string)
        /// </summary>
        public readonly string Iface;

        [OutputConstructor]
        private ClusterNetworkFlannelNetworkProvider(string iface)
        {
            Iface = iface;
        }
    }

    [OutputType]
    public sealed class ClusterNetworkWeaveNetworkProvider
    {
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string Password;

        [OutputConstructor]
        private ClusterNetworkWeaveNetworkProvider(string password)
        {
            Password = password;
        }
    }

    [OutputType]
    public sealed class ClusterNodes
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Docker socket on the node that will be used in tunneling (string)
        /// </summary>
        public readonly string DockerSocket;
        /// <summary>
        /// Hostname override for node (string)
        /// </summary>
        public readonly string HostnameOverride;
        /// <summary>
        /// Internal address that will be used for components communication (string)
        /// </summary>
        public readonly string InternalAddress;
        /// <summary>
        /// Node labels (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Labels;
        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        public readonly string? NodeName;
        /// <summary>
        /// Port used for SSH communication. Default `22` (string)
        /// </summary>
        public readonly string? Port;
        /// <summary>
        /// Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)
        /// </summary>
        public readonly ImmutableArray<string> Roles;
        public readonly string? RolesDeprecated;
        /// <summary>
        /// SSH Agent Auth enable (bool)
        /// </summary>
        public readonly bool SshAgentAuth;
        /// <summary>
        /// SSH Certificate (string)
        /// </summary>
        public readonly string? SshCert;
        /// <summary>
        /// SSH Certificate path (string)
        /// </summary>
        public readonly string? SshCertPath;
        /// <summary>
        /// SSH Private Key (string)
        /// </summary>
        public readonly string SshKey;
        /// <summary>
        /// SSH Private Key path (string)
        /// </summary>
        public readonly string SshKeyPath;
        /// <summary>
        /// Node taints (list)
        /// </summary>
        public readonly ImmutableArray<ClusterNodesTaints> Taints;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string User;

        [OutputConstructor]
        private ClusterNodes(
            string address,
            string dockerSocket,
            string hostnameOverride,
            string internalAddress,
            ImmutableDictionary<string, object>? labels,
            string? nodeName,
            string? port,
            ImmutableArray<string> roles,
            string? rolesDeprecated,
            bool sshAgentAuth,
            string? sshCert,
            string? sshCertPath,
            string sshKey,
            string sshKeyPath,
            ImmutableArray<ClusterNodesTaints> taints,
            string user)
        {
            Address = address;
            DockerSocket = dockerSocket;
            HostnameOverride = hostnameOverride;
            InternalAddress = internalAddress;
            Labels = labels;
            NodeName = nodeName;
            Port = port;
            Roles = roles;
            RolesDeprecated = rolesDeprecated;
            SshAgentAuth = sshAgentAuth;
            SshCert = sshCert;
            SshCertPath = sshCertPath;
            SshKey = sshKey;
            SshKeyPath = sshKeyPath;
            Taints = taints;
            User = user;
        }
    }

    [OutputType]
    public sealed class ClusterNodesTaints
    {
        /// <summary>
        /// Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)
        /// </summary>
        public readonly string? Effect;
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Taint value (string)
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private ClusterNodesTaints(
            string? effect,
            string key,
            string value)
        {
            Effect = effect;
            Key = key;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ClusterPrivateRegistries
    {
        /// <summary>
        /// Set as default registry. Default `false` (bool)
        /// </summary>
        public readonly bool? IsDefault;
        /// <summary>
        /// Registry password (string)
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Registry URL (string)
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// Registry user (string)
        /// </summary>
        public readonly string? User;

        [OutputConstructor]
        private ClusterPrivateRegistries(
            bool? isDefault,
            string? password,
            string url,
            string? user)
        {
            IsDefault = isDefault;
            Password = password;
            Url = url;
            User = user;
        }
    }

    [OutputType]
    public sealed class ClusterRestore
    {
        /// <summary>
        /// Restore cluster. Default `false` (bool)
        /// </summary>
        public readonly bool? Restore;
        /// <summary>
        /// Snapshot name (string)
        /// </summary>
        public readonly string? SnapshotName;

        [OutputConstructor]
        private ClusterRestore(
            bool? restore,
            string? snapshotName)
        {
            Restore = restore;
            SnapshotName = snapshotName;
        }
    }

    [OutputType]
    public sealed class ClusterRotateCertificates
    {
        /// <summary>
        /// Rotate CA Certificates. Default `false` (bool)
        /// </summary>
        public readonly bool? CaCertificates;
        /// <summary>
        /// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
        /// </summary>
        public readonly ImmutableArray<string> Services;

        [OutputConstructor]
        private ClusterRotateCertificates(
            bool? caCertificates,
            ImmutableArray<string> services)
        {
            CaCertificates = caCertificates;
            Services = services;
        }
    }

    [OutputType]
    public sealed class ClusterRunningSystemImages
    {
        /// <summary>
        /// Docker image for alpine (string)
        /// </summary>
        public readonly string? Alpine;
        /// <summary>
        /// Docker image for calico_cni (string)
        /// </summary>
        public readonly string? CalicoCni;
        /// <summary>
        /// Docker image for calico_controllers (string)
        /// </summary>
        public readonly string? CalicoControllers;
        /// <summary>
        /// Docker image for calico_ctl (string)
        /// </summary>
        public readonly string? CalicoCtl;
        /// <summary>
        /// Docker image for calico_flex_vol (string)
        /// </summary>
        public readonly string? CalicoFlexVol;
        /// <summary>
        /// Docker image for calico_node (string)
        /// </summary>
        public readonly string? CalicoNode;
        /// <summary>
        /// Docker image for canal_cni (string)
        /// </summary>
        public readonly string? CanalCni;
        /// <summary>
        /// Docker image for canal_flannel (string)
        /// </summary>
        public readonly string? CanalFlannel;
        /// <summary>
        /// Docker image for canal_flex_vol (string)
        /// </summary>
        public readonly string? CanalFlexVol;
        /// <summary>
        /// Docker image for canal_node (string)
        /// </summary>
        public readonly string? CanalNode;
        /// <summary>
        /// Docker image for cert_downloader (string)
        /// </summary>
        public readonly string? CertDownloader;
        /// <summary>
        /// Docker image for coredns (string)
        /// </summary>
        public readonly string? Coredns;
        /// <summary>
        /// Docker image for coredns_autoscaler (string)
        /// </summary>
        public readonly string? CorednsAutoscaler;
        /// <summary>
        /// Docker image for dnsmasq (string)
        /// </summary>
        public readonly string? Dnsmasq;
        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        public readonly string? Etcd;
        /// <summary>
        /// Docker image for flannel (string)
        /// </summary>
        public readonly string? Flannel;
        /// <summary>
        /// Docker image for flannel_cni (string)
        /// </summary>
        public readonly string? FlannelCni;
        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        public readonly string? Ingress;
        /// <summary>
        /// Docker image for ingress_backend (string)
        /// </summary>
        public readonly string? IngressBackend;
        /// <summary>
        /// Docker image for kube_dns (string)
        /// </summary>
        public readonly string? KubeDns;
        /// <summary>
        /// Docker image for kube_dns_autoscaler (string)
        /// </summary>
        public readonly string? KubeDnsAutoscaler;
        /// <summary>
        /// Docker image for kube_dns_sidecar (string)
        /// </summary>
        public readonly string? KubeDnsSidecar;
        /// <summary>
        /// Docker image for kubernetes (string)
        /// </summary>
        public readonly string? Kubernetes;
        /// <summary>
        /// Docker image for kubernetes_services_sidecar (string)
        /// </summary>
        public readonly string? KubernetesServicesSidecar;
        /// <summary>
        /// Docker image for metrics_server (string)
        /// </summary>
        public readonly string? MetricsServer;
        /// <summary>
        /// Docker image for nginx_proxy (string)
        /// </summary>
        public readonly string? NginxProxy;
        /// <summary>
        /// Docker image for nodelocal (string)
        /// </summary>
        public readonly string? Nodelocal;
        /// <summary>
        /// Docker image for pod_infra_container (string)
        /// </summary>
        public readonly string? PodInfraContainer;
        /// <summary>
        /// Docker image for weave_cni (string)
        /// </summary>
        public readonly string? WeaveCni;
        /// <summary>
        /// Docker image for weave_node (string)
        /// </summary>
        public readonly string? WeaveNode;
        /// <summary>
        /// Docker image for windows_pod_infra_container (string)
        /// </summary>
        public readonly string? WindowsPodInfraContainer;

        [OutputConstructor]
        private ClusterRunningSystemImages(
            string? alpine,
            string? calicoCni,
            string? calicoControllers,
            string? calicoCtl,
            string? calicoFlexVol,
            string? calicoNode,
            string? canalCni,
            string? canalFlannel,
            string? canalFlexVol,
            string? canalNode,
            string? certDownloader,
            string? coredns,
            string? corednsAutoscaler,
            string? dnsmasq,
            string? etcd,
            string? flannel,
            string? flannelCni,
            string? ingress,
            string? ingressBackend,
            string? kubeDns,
            string? kubeDnsAutoscaler,
            string? kubeDnsSidecar,
            string? kubernetes,
            string? kubernetesServicesSidecar,
            string? metricsServer,
            string? nginxProxy,
            string? nodelocal,
            string? podInfraContainer,
            string? weaveCni,
            string? weaveNode,
            string? windowsPodInfraContainer)
        {
            Alpine = alpine;
            CalicoCni = calicoCni;
            CalicoControllers = calicoControllers;
            CalicoCtl = calicoCtl;
            CalicoFlexVol = calicoFlexVol;
            CalicoNode = calicoNode;
            CanalCni = canalCni;
            CanalFlannel = canalFlannel;
            CanalFlexVol = canalFlexVol;
            CanalNode = canalNode;
            CertDownloader = certDownloader;
            Coredns = coredns;
            CorednsAutoscaler = corednsAutoscaler;
            Dnsmasq = dnsmasq;
            Etcd = etcd;
            Flannel = flannel;
            FlannelCni = flannelCni;
            Ingress = ingress;
            IngressBackend = ingressBackend;
            KubeDns = kubeDns;
            KubeDnsAutoscaler = kubeDnsAutoscaler;
            KubeDnsSidecar = kubeDnsSidecar;
            Kubernetes = kubernetes;
            KubernetesServicesSidecar = kubernetesServicesSidecar;
            MetricsServer = metricsServer;
            NginxProxy = nginxProxy;
            Nodelocal = nodelocal;
            PodInfraContainer = podInfraContainer;
            WeaveCni = weaveCni;
            WeaveNode = weaveNode;
            WindowsPodInfraContainer = windowsPodInfraContainer;
        }
    }

    [OutputType]
    public sealed class ClusterServices
    {
        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        public readonly ClusterServicesEtcd Etcd;
        /// <summary>
        /// Kube API options for RKE services (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesKubeApi KubeApi;
        /// <summary>
        /// Kube Controller options for RKE services (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesKubeController KubeController;
        /// <summary>
        /// Kubelet options for RKE services (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesKubelet Kubelet;
        /// <summary>
        /// Kubeproxy options for RKE services (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesKubeproxy Kubeproxy;
        /// <summary>
        /// Scheduler options for RKE services (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesScheduler Scheduler;

        [OutputConstructor]
        private ClusterServices(
            ClusterServicesEtcd etcd,
            ClusterServicesKubeApi kubeApi,
            ClusterServicesKubeController kubeController,
            ClusterServicesKubelet kubelet,
            ClusterServicesKubeproxy kubeproxy,
            ClusterServicesScheduler scheduler)
        {
            Etcd = etcd;
            KubeApi = kubeApi;
            KubeController = kubeController;
            Kubelet = kubelet;
            Kubeproxy = kubeproxy;
            Scheduler = scheduler;
        }
    }

    [OutputType]
    public sealed class ClusterServicesEtcd
    {
        /// <summary>
        /// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesEtcdBackupConfig BackupConfig;
        /// <summary>
        /// TLS CA certificate for etcd service (string)
        /// </summary>
        public readonly string CaCert;
        /// <summary>
        /// TLS certificate for etcd service (string)
        /// </summary>
        public readonly string Cert;
        /// <summary>
        /// Creation option for etcd service (string)
        /// </summary>
        public readonly string Creation;
        /// <summary>
        /// External urls for etcd service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExternalUrls;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        public readonly int? Gid;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// Snapshot option for etcd service. Default `true` (bool)
        /// </summary>
        public readonly bool? Snapshot;
        /// <summary>
        /// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        public readonly int? Uid;

        [OutputConstructor]
        private ClusterServicesEtcd(
            ClusterServicesEtcdBackupConfig backupConfig,
            string caCert,
            string cert,
            string creation,
            ImmutableArray<string> externalUrls,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            int? gid,
            string image,
            string key,
            string path,
            string retention,
            bool? snapshot,
            int? uid)
        {
            BackupConfig = backupConfig;
            CaCert = caCert;
            Cert = cert;
            Creation = creation;
            ExternalUrls = externalUrls;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Gid = gid;
            Image = image;
            Key = key;
            Path = path;
            Retention = retention;
            Snapshot = snapshot;
            Uid = uid;
        }
    }

    [OutputType]
    public sealed class ClusterServicesEtcdBackupConfig
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Interval hours for etcd backup. Default `12` (int)
        /// </summary>
        public readonly int? IntervalHours;
        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        public readonly int? Retention;
        /// <summary>
        /// S3 config options for etcd backup (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesEtcdBackupConfigS3BackupConfig? S3BackupConfig;
        /// <summary>
        /// Safe timestamp for etcd backup. Default: `false` (bool)
        /// </summary>
        public readonly bool? SafeTimestamp;

        [OutputConstructor]
        private ClusterServicesEtcdBackupConfig(
            bool? enabled,
            int? intervalHours,
            int? retention,
            ClusterServicesEtcdBackupConfigS3BackupConfig? s3BackupConfig,
            bool? safeTimestamp)
        {
            Enabled = enabled;
            IntervalHours = intervalHours;
            Retention = retention;
            S3BackupConfig = s3BackupConfig;
            SafeTimestamp = safeTimestamp;
        }
    }

    [OutputType]
    public sealed class ClusterServicesEtcdBackupConfigS3BackupConfig
    {
        /// <summary>
        /// Access key for S3 service (string)
        /// </summary>
        public readonly string? AccessKey;
        /// <summary>
        /// Bucket name for S3 service (string)
        /// </summary>
        public readonly string? BucketName;
        /// <summary>
        /// Base64 encoded custom CA for S3 service. Use filebase64(&lt;FILE&gt;) for encoding file. Available from Rancher v2.2.5 (string)
        /// </summary>
        public readonly string? CustomCa;
        /// <summary>
        /// Endpoint for S3 service (string)
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        public readonly string? Folder;
        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Secret key for S3 service (string)
        /// </summary>
        public readonly string? SecretKey;

        [OutputConstructor]
        private ClusterServicesEtcdBackupConfigS3BackupConfig(
            string? accessKey,
            string? bucketName,
            string? customCa,
            string? endpoint,
            string? folder,
            string? region,
            string? secretKey)
        {
            AccessKey = accessKey;
            BucketName = bucketName;
            CustomCa = customCa;
            Endpoint = endpoint;
            Folder = folder;
            Region = region;
            SecretKey = secretKey;
        }
    }

    [OutputType]
    public sealed class ClusterServicesEtcdDeprecated
    {
        /// <summary>
        /// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesEtcdDeprecatedBackupConfig BackupConfig;
        /// <summary>
        /// TLS CA certificate for etcd service (string)
        /// </summary>
        public readonly string CaCert;
        /// <summary>
        /// TLS certificate for etcd service (string)
        /// </summary>
        public readonly string Cert;
        /// <summary>
        /// Creation option for etcd service (string)
        /// </summary>
        public readonly string Creation;
        /// <summary>
        /// External urls for etcd service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExternalUrls;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        public readonly int? Gid;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// Snapshot option for etcd service. Default `true` (bool)
        /// </summary>
        public readonly bool? Snapshot;
        /// <summary>
        /// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
        /// </summary>
        public readonly int? Uid;

        [OutputConstructor]
        private ClusterServicesEtcdDeprecated(
            ClusterServicesEtcdDeprecatedBackupConfig backupConfig,
            string caCert,
            string cert,
            string creation,
            ImmutableArray<string> externalUrls,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            int? gid,
            string image,
            string key,
            string path,
            string retention,
            bool? snapshot,
            int? uid)
        {
            BackupConfig = backupConfig;
            CaCert = caCert;
            Cert = cert;
            Creation = creation;
            ExternalUrls = externalUrls;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Gid = gid;
            Image = image;
            Key = key;
            Path = path;
            Retention = retention;
            Snapshot = snapshot;
            Uid = uid;
        }
    }

    [OutputType]
    public sealed class ClusterServicesEtcdDeprecatedBackupConfig
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Interval hours for etcd backup. Default `12` (int)
        /// </summary>
        public readonly int? IntervalHours;
        /// <summary>
        /// Retention for etcd backup. Default `6` (int)
        /// </summary>
        public readonly int? Retention;
        /// <summary>
        /// S3 config options for etcd backup (list maxitems:1)
        /// </summary>
        public readonly ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig? S3BackupConfig;
        /// <summary>
        /// Safe timestamp for etcd backup. Default: `false` (bool)
        /// </summary>
        public readonly bool? SafeTimestamp;

        [OutputConstructor]
        private ClusterServicesEtcdDeprecatedBackupConfig(
            bool? enabled,
            int? intervalHours,
            int? retention,
            ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig? s3BackupConfig,
            bool? safeTimestamp)
        {
            Enabled = enabled;
            IntervalHours = intervalHours;
            Retention = retention;
            S3BackupConfig = s3BackupConfig;
            SafeTimestamp = safeTimestamp;
        }
    }

    [OutputType]
    public sealed class ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig
    {
        /// <summary>
        /// Access key for S3 service (string)
        /// </summary>
        public readonly string? AccessKey;
        /// <summary>
        /// Bucket name for S3 service (string)
        /// </summary>
        public readonly string? BucketName;
        /// <summary>
        /// Base64 encoded custom CA for S3 service. Use filebase64(&lt;FILE&gt;) for encoding file. Available from Rancher v2.2.5 (string)
        /// </summary>
        public readonly string? CustomCa;
        /// <summary>
        /// Endpoint for S3 service (string)
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// Folder for S3 service. Available from Rancher v2.2.7 (string)
        /// </summary>
        public readonly string? Folder;
        /// <summary>
        /// Region for S3 service (string)
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Secret key for S3 service (string)
        /// </summary>
        public readonly string? SecretKey;

        [OutputConstructor]
        private ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig(
            string? accessKey,
            string? bucketName,
            string? customCa,
            string? endpoint,
            string? folder,
            string? region,
            string? secretKey)
        {
            AccessKey = accessKey;
            BucketName = bucketName;
            CustomCa = customCa;
            Endpoint = endpoint;
            Folder = folder;
            Region = region;
            SecretKey = secretKey;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApi
    {
        /// <summary>
        /// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) Default: `false` (bool)
        /// </summary>
        public readonly bool? AlwaysPullImages;
        /// <summary>
        /// K8s audit log configuration. (list maxitem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiAuditLog? AuditLog;
        /// <summary>
        /// K8s event rate limit configuration. (list maxitem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiEventRateLimit? EventRateLimit;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Pod Security Policy option for kube API service. Default `false` (bool)
        /// </summary>
        public readonly bool? PodSecurityPolicy;
        /// <summary>
        /// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiSecretsEncryptionConfig? SecretsEncryptionConfig;
        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        public readonly string ServiceClusterIpRange;
        /// <summary>
        /// Service Node Port Range option for kube API service (string)
        /// </summary>
        public readonly string ServiceNodePortRange;

        [OutputConstructor]
        private ClusterServicesKubeApi(
            bool? alwaysPullImages,
            ClusterServicesKubeApiAuditLog? auditLog,
            ClusterServicesKubeApiEventRateLimit? eventRateLimit,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image,
            bool? podSecurityPolicy,
            ClusterServicesKubeApiSecretsEncryptionConfig? secretsEncryptionConfig,
            string serviceClusterIpRange,
            string serviceNodePortRange)
        {
            AlwaysPullImages = alwaysPullImages;
            AuditLog = auditLog;
            EventRateLimit = eventRateLimit;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
            PodSecurityPolicy = podSecurityPolicy;
            SecretsEncryptionConfig = secretsEncryptionConfig;
            ServiceClusterIpRange = serviceClusterIpRange;
            ServiceNodePortRange = serviceNodePortRange;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiAuditLog
    {
        /// <summary>
        /// Audit log configuration. (list maxtiem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiAuditLogConfiguration Configuration;
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;

        [OutputConstructor]
        private ClusterServicesKubeApiAuditLog(
            ClusterServicesKubeApiAuditLogConfiguration configuration,
            bool? enabled)
        {
            Configuration = configuration;
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiAuditLogConfiguration
    {
        /// <summary>
        /// Audit log format. Default: `json` (string)
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        public readonly int? MaxAge;
        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        public readonly int? MaxBackup;
        /// <summary>
        /// Audit log max size. Default: `100` (int)
        /// </summary>
        public readonly int? MaxSize;
        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
        /// </summary>
        public readonly string Policy;

        [OutputConstructor]
        private ClusterServicesKubeApiAuditLogConfiguration(
            string? format,
            int? maxAge,
            int? maxBackup,
            int? maxSize,
            string? path,
            string policy)
        {
            Format = format;
            MaxAge = maxAge;
            MaxBackup = maxBackup;
            MaxSize = maxSize;
            Path = path;
            Policy = policy;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiDeprecated
    {
        /// <summary>
        /// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) Default: `false` (bool)
        /// </summary>
        public readonly bool? AlwaysPullImages;
        /// <summary>
        /// K8s audit log configuration. (list maxitem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiDeprecatedAuditLog? AuditLog;
        /// <summary>
        /// K8s event rate limit configuration. (list maxitem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiDeprecatedEventRateLimit? EventRateLimit;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Pod Security Policy option for kube API service. Default `false` (bool)
        /// </summary>
        public readonly bool? PodSecurityPolicy;
        /// <summary>
        /// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig? SecretsEncryptionConfig;
        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        public readonly string ServiceClusterIpRange;
        /// <summary>
        /// Service Node Port Range option for kube API service (string)
        /// </summary>
        public readonly string ServiceNodePortRange;

        [OutputConstructor]
        private ClusterServicesKubeApiDeprecated(
            bool? alwaysPullImages,
            ClusterServicesKubeApiDeprecatedAuditLog? auditLog,
            ClusterServicesKubeApiDeprecatedEventRateLimit? eventRateLimit,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image,
            bool? podSecurityPolicy,
            ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig? secretsEncryptionConfig,
            string serviceClusterIpRange,
            string serviceNodePortRange)
        {
            AlwaysPullImages = alwaysPullImages;
            AuditLog = auditLog;
            EventRateLimit = eventRateLimit;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
            PodSecurityPolicy = podSecurityPolicy;
            SecretsEncryptionConfig = secretsEncryptionConfig;
            ServiceClusterIpRange = serviceClusterIpRange;
            ServiceNodePortRange = serviceNodePortRange;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiDeprecatedAuditLog
    {
        /// <summary>
        /// Audit log configuration. (list maxtiem: 1)
        /// </summary>
        public readonly ClusterServicesKubeApiDeprecatedAuditLogConfiguration Configuration;
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;

        [OutputConstructor]
        private ClusterServicesKubeApiDeprecatedAuditLog(
            ClusterServicesKubeApiDeprecatedAuditLogConfiguration configuration,
            bool? enabled)
        {
            Configuration = configuration;
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiDeprecatedAuditLogConfiguration
    {
        /// <summary>
        /// Audit log format. Default: `json` (string)
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        public readonly int? MaxAge;
        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        public readonly int? MaxBackup;
        /// <summary>
        /// Audit log max size. Default: `100` (int)
        /// </summary>
        public readonly int? MaxSize;
        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
        /// </summary>
        public readonly string Policy;

        [OutputConstructor]
        private ClusterServicesKubeApiDeprecatedAuditLogConfiguration(
            string? format,
            int? maxAge,
            int? maxBackup,
            int? maxSize,
            string? path,
            string policy)
        {
            Format = format;
            MaxAge = maxAge;
            MaxBackup = maxBackup;
            MaxSize = maxSize;
            Path = path;
            Policy = policy;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiDeprecatedEventRateLimit
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;

        [OutputConstructor]
        private ClusterServicesKubeApiDeprecatedEventRateLimit(bool? enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;

        [OutputConstructor]
        private ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig(bool? enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiEventRateLimit
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;

        [OutputConstructor]
        private ClusterServicesKubeApiEventRateLimit(bool? enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeApiSecretsEncryptionConfig
    {
        /// <summary>
        /// Enable secrets encryption. Default: `false` (bool)
        /// </summary>
        public readonly bool? Enabled;

        [OutputConstructor]
        private ClusterServicesKubeApiSecretsEncryptionConfig(bool? enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeController
    {
        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        public readonly string ClusterCidr;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        public readonly string ServiceClusterIpRange;

        [OutputConstructor]
        private ClusterServicesKubeController(
            string clusterCidr,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image,
            string serviceClusterIpRange)
        {
            ClusterCidr = clusterCidr;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
            ServiceClusterIpRange = serviceClusterIpRange;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeControllerDeprecated
    {
        /// <summary>
        /// Cluster CIDR option for kube controller service (string)
        /// </summary>
        public readonly string ClusterCidr;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Service Cluster ip Range option for kube controller service (string)
        /// </summary>
        public readonly string ServiceClusterIpRange;

        [OutputConstructor]
        private ClusterServicesKubeControllerDeprecated(
            string clusterCidr,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image,
            string serviceClusterIpRange)
        {
            ClusterCidr = clusterCidr;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
            ServiceClusterIpRange = serviceClusterIpRange;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeProxyDeprecated
    {
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;

        [OutputConstructor]
        private ClusterServicesKubeProxyDeprecated(
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image)
        {
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeSchedulerDeprecated
    {
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;

        [OutputConstructor]
        private ClusterServicesKubeSchedulerDeprecated(
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image)
        {
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubelet
    {
        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        public readonly string ClusterDnsServer;
        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        public readonly string? ClusterDomain;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Enable or disable failing when swap on is not supported (bool)
        /// * `generate_serving_certificate` [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
        /// </summary>
        public readonly bool FailSwapOn;
        public readonly bool? GenerateServingCertificate;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Infra container image for kubelet service (string)
        /// </summary>
        public readonly string InfraContainerImage;

        [OutputConstructor]
        private ClusterServicesKubelet(
            string clusterDnsServer,
            string? clusterDomain,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            bool failSwapOn,
            bool? generateServingCertificate,
            string image,
            string infraContainerImage)
        {
            ClusterDnsServer = clusterDnsServer;
            ClusterDomain = clusterDomain;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            FailSwapOn = failSwapOn;
            GenerateServingCertificate = generateServingCertificate;
            Image = image;
            InfraContainerImage = infraContainerImage;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeletDeprecated
    {
        /// <summary>
        /// Cluster DNS Server option for kubelet service (string)
        /// </summary>
        public readonly string ClusterDnsServer;
        /// <summary>
        /// Cluster Domain option for kubelet service. Default `cluster.local` (string)
        /// </summary>
        public readonly string? ClusterDomain;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Enable or disable failing when swap on is not supported (bool)
        /// * `generate_serving_certificate` [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
        /// </summary>
        public readonly bool FailSwapOn;
        public readonly bool? GenerateServingCertificate;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Infra container image for kubelet service (string)
        /// </summary>
        public readonly string InfraContainerImage;

        [OutputConstructor]
        private ClusterServicesKubeletDeprecated(
            string clusterDnsServer,
            string? clusterDomain,
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            bool failSwapOn,
            bool? generateServingCertificate,
            string image,
            string infraContainerImage)
        {
            ClusterDnsServer = clusterDnsServer;
            ClusterDomain = clusterDomain;
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            FailSwapOn = failSwapOn;
            GenerateServingCertificate = generateServingCertificate;
            Image = image;
            InfraContainerImage = infraContainerImage;
        }
    }

    [OutputType]
    public sealed class ClusterServicesKubeproxy
    {
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;

        [OutputConstructor]
        private ClusterServicesKubeproxy(
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image)
        {
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
        }
    }

    [OutputType]
    public sealed class ClusterServicesScheduler
    {
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        /// <summary>
        /// Extra binds for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraBinds;
        /// <summary>
        /// Extra environment for scheduler service (list)
        /// </summary>
        public readonly ImmutableArray<string> ExtraEnvs;
        /// <summary>
        /// Docker image for scheduler service (string)
        /// </summary>
        public readonly string Image;

        [OutputConstructor]
        private ClusterServicesScheduler(
            ImmutableDictionary<string, object> extraArgs,
            ImmutableArray<string> extraBinds,
            ImmutableArray<string> extraEnvs,
            string image)
        {
            ExtraArgs = extraArgs;
            ExtraBinds = extraBinds;
            ExtraEnvs = extraEnvs;
            Image = image;
        }
    }

    [OutputType]
    public sealed class ClusterSystemImages
    {
        /// <summary>
        /// Docker image for alpine (string)
        /// </summary>
        public readonly string? Alpine;
        /// <summary>
        /// Docker image for calico_cni (string)
        /// </summary>
        public readonly string? CalicoCni;
        /// <summary>
        /// Docker image for calico_controllers (string)
        /// </summary>
        public readonly string? CalicoControllers;
        /// <summary>
        /// Docker image for calico_ctl (string)
        /// </summary>
        public readonly string? CalicoCtl;
        /// <summary>
        /// Docker image for calico_flex_vol (string)
        /// </summary>
        public readonly string? CalicoFlexVol;
        /// <summary>
        /// Docker image for calico_node (string)
        /// </summary>
        public readonly string? CalicoNode;
        /// <summary>
        /// Docker image for canal_cni (string)
        /// </summary>
        public readonly string? CanalCni;
        /// <summary>
        /// Docker image for canal_flannel (string)
        /// </summary>
        public readonly string? CanalFlannel;
        /// <summary>
        /// Docker image for canal_flex_vol (string)
        /// </summary>
        public readonly string? CanalFlexVol;
        /// <summary>
        /// Docker image for canal_node (string)
        /// </summary>
        public readonly string? CanalNode;
        /// <summary>
        /// Docker image for cert_downloader (string)
        /// </summary>
        public readonly string? CertDownloader;
        /// <summary>
        /// Docker image for coredns (string)
        /// </summary>
        public readonly string? Coredns;
        /// <summary>
        /// Docker image for coredns_autoscaler (string)
        /// </summary>
        public readonly string? CorednsAutoscaler;
        /// <summary>
        /// Docker image for dnsmasq (string)
        /// </summary>
        public readonly string? Dnsmasq;
        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        public readonly string? Etcd;
        /// <summary>
        /// Docker image for flannel (string)
        /// </summary>
        public readonly string? Flannel;
        /// <summary>
        /// Docker image for flannel_cni (string)
        /// </summary>
        public readonly string? FlannelCni;
        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        public readonly string? Ingress;
        /// <summary>
        /// Docker image for ingress_backend (string)
        /// </summary>
        public readonly string? IngressBackend;
        /// <summary>
        /// Docker image for kube_dns (string)
        /// </summary>
        public readonly string? KubeDns;
        /// <summary>
        /// Docker image for kube_dns_autoscaler (string)
        /// </summary>
        public readonly string? KubeDnsAutoscaler;
        /// <summary>
        /// Docker image for kube_dns_sidecar (string)
        /// </summary>
        public readonly string? KubeDnsSidecar;
        /// <summary>
        /// Docker image for kubernetes (string)
        /// </summary>
        public readonly string? Kubernetes;
        /// <summary>
        /// Docker image for kubernetes_services_sidecar (string)
        /// </summary>
        public readonly string? KubernetesServicesSidecar;
        /// <summary>
        /// Docker image for metrics_server (string)
        /// </summary>
        public readonly string? MetricsServer;
        /// <summary>
        /// Docker image for nginx_proxy (string)
        /// </summary>
        public readonly string? NginxProxy;
        /// <summary>
        /// Docker image for nodelocal (string)
        /// </summary>
        public readonly string? Nodelocal;
        /// <summary>
        /// Docker image for pod_infra_container (string)
        /// </summary>
        public readonly string? PodInfraContainer;
        /// <summary>
        /// Docker image for weave_cni (string)
        /// </summary>
        public readonly string? WeaveCni;
        /// <summary>
        /// Docker image for weave_node (string)
        /// </summary>
        public readonly string? WeaveNode;
        /// <summary>
        /// Docker image for windows_pod_infra_container (string)
        /// </summary>
        public readonly string? WindowsPodInfraContainer;

        [OutputConstructor]
        private ClusterSystemImages(
            string? alpine,
            string? calicoCni,
            string? calicoControllers,
            string? calicoCtl,
            string? calicoFlexVol,
            string? calicoNode,
            string? canalCni,
            string? canalFlannel,
            string? canalFlexVol,
            string? canalNode,
            string? certDownloader,
            string? coredns,
            string? corednsAutoscaler,
            string? dnsmasq,
            string? etcd,
            string? flannel,
            string? flannelCni,
            string? ingress,
            string? ingressBackend,
            string? kubeDns,
            string? kubeDnsAutoscaler,
            string? kubeDnsSidecar,
            string? kubernetes,
            string? kubernetesServicesSidecar,
            string? metricsServer,
            string? nginxProxy,
            string? nodelocal,
            string? podInfraContainer,
            string? weaveCni,
            string? weaveNode,
            string? windowsPodInfraContainer)
        {
            Alpine = alpine;
            CalicoCni = calicoCni;
            CalicoControllers = calicoControllers;
            CalicoCtl = calicoCtl;
            CalicoFlexVol = calicoFlexVol;
            CalicoNode = calicoNode;
            CanalCni = canalCni;
            CanalFlannel = canalFlannel;
            CanalFlexVol = canalFlexVol;
            CanalNode = canalNode;
            CertDownloader = certDownloader;
            Coredns = coredns;
            CorednsAutoscaler = corednsAutoscaler;
            Dnsmasq = dnsmasq;
            Etcd = etcd;
            Flannel = flannel;
            FlannelCni = flannelCni;
            Ingress = ingress;
            IngressBackend = ingressBackend;
            KubeDns = kubeDns;
            KubeDnsAutoscaler = kubeDnsAutoscaler;
            KubeDnsSidecar = kubeDnsSidecar;
            Kubernetes = kubernetes;
            KubernetesServicesSidecar = kubernetesServicesSidecar;
            MetricsServer = metricsServer;
            NginxProxy = nginxProxy;
            Nodelocal = nodelocal;
            PodInfraContainer = podInfraContainer;
            WeaveCni = weaveCni;
            WeaveNode = weaveNode;
            WindowsPodInfraContainer = windowsPodInfraContainer;
        }
    }

    [OutputType]
    public sealed class ClusterWorkerHosts
    {
        /// <summary>
        /// Address ip for node (string)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Name of the host provisioned via docker machine (string)
        /// </summary>
        public readonly string NodeName;

        [OutputConstructor]
        private ClusterWorkerHosts(
            string address,
            string nodeName)
        {
            Address = address;
            NodeName = nodeName;
        }
    }
    }
}
